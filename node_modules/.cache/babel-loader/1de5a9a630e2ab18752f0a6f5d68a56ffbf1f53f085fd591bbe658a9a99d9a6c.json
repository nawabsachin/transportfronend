{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sharm\\\\OneDrive\\\\Desktop\\\\Zaeesh\\\\transport11\\\\src\\\\component\\\\Login.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import './adminlogin.css'; // Importing the CSS\n\n// const Login = () => {\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const navigate = useNavigate();\n\n//   const handleLogin = (e) => {\n//     e.preventDefault();\n//     if (email === 'admin@shop.com' && password === 'admin123') {\n//       localStorage.setItem('admin-auth', 'true');\n//       navigate('/transport11/src/component/DarshMain.jsx');\n//     } else {\n//       alert('Invalid Credentials');\n//     }\n//   };\n\n//   return (\n//     <div className=\"login-container\">\n//       <form onSubmit={handleLogin} className=\"login-form\">\n//         <h2 className=\"login-title\">Admin Login</h2>\n//         <input\n//           type=\"email\"\n//           placeholder=\"Email\"\n//           className=\"login-input\"\n//           onChange={(e) => setEmail(e.target.value)}\n//           required\n//         />\n//         <input\n//           type=\"password\"\n//           placeholder=\"Password\"\n//           className=\"login-input\"\n//           onChange={(e) => setPassword(e.target.value)}\n//           required\n//         />\n//         <button type=\"submit\" className=\"login-button\">Login</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default Login;\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './adminlogin.css'; // Importing the CSS\nimport axios from 'axios'; // We'll use axios for the API request\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const handleLogin = async e => {\n    e.preventDefault();\n    try {\n      // Make a POST request to the backend to verify credentials\n      const response = await axios.post('http://localhost:5000/api/login', {\n        email,\n        password\n      });\n\n      // If login is successful, save the token to localStorage\n      const {\n        token\n      } = response.data;\n      localStorage.setItem('admin-auth', token);\n\n      // Navigate to the admin panel or dashboard after successful login\n      navigate('/dashboard'); // Update with your desired admin page route\n    } catch (err) {\n      // Handle login failure (wrong credentials, server error)\n      if (err.response) {\n        // Backend error\n        setError('Invalid credentials');\n      } else {\n        // Network or other errors\n        setError('An error occurred. Please try again later.');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      className: \"login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"login-title\",\n        children: \"Admin Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 19\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        className: \"login-input\",\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        className: \"login-input\",\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"login-button\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"04s5JR+/x8JdloJ2sm+29L/IvyI=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","axios","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","error","setError","navigate","handleLogin","e","preventDefault","response","post","token","data","localStorage","setItem","err","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","target","value","required","_c","$RefreshReg$"],"sources":["C:/Users/sharm/OneDrive/Desktop/Zaeesh/transport11/src/component/Login.jsx"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import './adminlogin.css'; // Importing the CSS\r\n\r\n// const Login = () => {\r\n//   const [email, setEmail] = useState('');\r\n//   const [password, setPassword] = useState('');\r\n//   const navigate = useNavigate();\r\n\r\n//   const handleLogin = (e) => {\r\n//     e.preventDefault();\r\n//     if (email === 'admin@shop.com' && password === 'admin123') {\r\n//       localStorage.setItem('admin-auth', 'true');\r\n//       navigate('/transport11/src/component/DarshMain.jsx');\r\n//     } else {\r\n//       alert('Invalid Credentials');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"login-container\">\r\n//       <form onSubmit={handleLogin} className=\"login-form\">\r\n//         <h2 className=\"login-title\">Admin Login</h2>\r\n//         <input\r\n//           type=\"email\"\r\n//           placeholder=\"Email\"\r\n//           className=\"login-input\"\r\n//           onChange={(e) => setEmail(e.target.value)}\r\n//           required\r\n//         />\r\n//         <input\r\n//           type=\"password\"\r\n//           placeholder=\"Password\"\r\n//           className=\"login-input\"\r\n//           onChange={(e) => setPassword(e.target.value)}\r\n//           required\r\n//         />\r\n//         <button type=\"submit\" className=\"login-button\">Login</button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Login;\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './adminlogin.css'; // Importing the CSS\r\nimport axios from 'axios'; // We'll use axios for the API request\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    try {\r\n      // Make a POST request to the backend to verify credentials\r\n      const response = await axios.post('http://localhost:5000/api/login', { email, password });\r\n      \r\n      // If login is successful, save the token to localStorage\r\n      const { token } = response.data;\r\n      localStorage.setItem('admin-auth', token);\r\n      \r\n      // Navigate to the admin panel or dashboard after successful login\r\n      navigate('/dashboard'); // Update with your desired admin page route\r\n\r\n    } catch (err) {\r\n      // Handle login failure (wrong credentials, server error)\r\n      if (err.response) {\r\n        // Backend error\r\n        setError('Invalid credentials');\r\n      } else {\r\n        // Network or other errors\r\n        setError('An error occurred. Please try again later.');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <form onSubmit={handleLogin} className=\"login-form\">\r\n        <h2 className=\"login-title\">Admin Login</h2>\r\n        \r\n        {error && <p className=\"error-message\">{error}</p>} {/* Display error if credentials are wrong */}\r\n        \r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          className=\"login-input\"\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          required\r\n        />\r\n        \r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          className=\"login-input\"\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          required\r\n        />\r\n        \r\n        <button type=\"submit\" className=\"login-button\">Login</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}