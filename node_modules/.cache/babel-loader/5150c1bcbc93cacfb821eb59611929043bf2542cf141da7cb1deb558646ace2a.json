{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sharm\\\\OneDrive\\\\Desktop\\\\Zaeesh\\\\transport11\\\\src\\\\component\\\\Login.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n\n// const Login = () => {\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const navigate = useNavigate();\n\n//   const handleLogin = (e) => {\n//     e.preventDefault();\n//     if (email === 'admin@shop.com' && password === 'admin123') {\n//       localStorage.setItem('admin-auth', 'true');\n//       navigate('/transport11/src/component/Dashboard.jsx');\n//     } else {\n//       alert('Invalid Credentials');\n//     }\n//   };\n\n//   return (\n//     <form onSubmit={handleLogin}>\n//       <h2>Admin Login</h2>\n//       <input type=\"email\" placeholder=\"Email\" onChange={(e) => setEmail(e.target.value)} required />\n//       <input type=\"password\" placeholder=\"Password\" onChange={(e) => setPassword(e.target.value)} required />\n//       <button type=\"submit\">Login</button>\n//     </form>\n//   );\n// };\n\n// export default Login;\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport jwt from 'jsonwebtoken'; // Import the jwt package (you can install it using `npm install jsonwebtoken`)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n  const handleLogin = e => {\n    e.preventDefault();\n\n    // Simulate validation for demo purposes (replace with API request in production)\n    if (email === 'admin@shop.com' && password === 'admin123') {\n      // Create a payload for the token (you can include additional data)\n      const payload = {\n        email: 'admin@shop.com',\n        // Store email or user-specific data in the payload\n        role: 'admin' // Example role field\n      };\n\n      // Create a JWT token with an expiration of 1 hour\n      const token = jwt.sign(payload, 'yourSecretKey', {\n        expiresIn: '1h'\n      }); // Replace 'yourSecretKey' with a secret key for production\n\n      // Store the token in localStorage\n      localStorage.setItem('token', token);\n\n      // Redirect to the Dashboard\n      navigate('/transport11/src/component/Dashboard.jsx');\n    } else {\n      alert('Invalid Credentials');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleLogin,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Admin Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"Email\",\n      onChange: e => setEmail(e.target.value),\n      value: email,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      onChange: e => setPassword(e.target.value),\n      value: password,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"OqFWRqNCJ3BNGyYdED5qKBGtbCw=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\n// \nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","jwt","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","navigate","handleLogin","e","preventDefault","payload","role","token","sign","expiresIn","localStorage","setItem","alert","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","target","value","required","_c","$RefreshReg$"],"sources":["C:/Users/sharm/OneDrive/Desktop/Zaeesh/transport11/src/component/Login.jsx"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\n// const Login = () => {\r\n//   const [email, setEmail] = useState('');\r\n//   const [password, setPassword] = useState('');\r\n//   const navigate = useNavigate();\r\n\r\n//   const handleLogin = (e) => {\r\n//     e.preventDefault();\r\n//     if (email === 'admin@shop.com' && password === 'admin123') {\r\n//       localStorage.setItem('admin-auth', 'true');\r\n//       navigate('/transport11/src/component/Dashboard.jsx');\r\n//     } else {\r\n//       alert('Invalid Credentials');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <form onSubmit={handleLogin}>\r\n//       <h2>Admin Login</h2>\r\n//       <input type=\"email\" placeholder=\"Email\" onChange={(e) => setEmail(e.target.value)} required />\r\n//       <input type=\"password\" placeholder=\"Password\" onChange={(e) => setPassword(e.target.value)} required />\r\n//       <button type=\"submit\">Login</button>\r\n//     </form>\r\n//   );\r\n// };\r\n\r\n// export default Login;\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport jwt from 'jsonwebtoken'; // Import the jwt package (you can install it using `npm install jsonwebtoken`)\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Simulate validation for demo purposes (replace with API request in production)\r\n    if (email === 'admin@shop.com' && password === 'admin123') {\r\n      \r\n      // Create a payload for the token (you can include additional data)\r\n      const payload = {\r\n        email: 'admin@shop.com', // Store email or user-specific data in the payload\r\n        role: 'admin', // Example role field\r\n      };\r\n      \r\n      // Create a JWT token with an expiration of 1 hour\r\n      const token = jwt.sign(payload, 'yourSecretKey', { expiresIn: '1h' }); // Replace 'yourSecretKey' with a secret key for production\r\n\r\n      // Store the token in localStorage\r\n      localStorage.setItem('token', token);\r\n      \r\n      // Redirect to the Dashboard\r\n      navigate('/transport11/src/component/Dashboard.jsx');\r\n    } else {\r\n      alert('Invalid Credentials');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleLogin}>\r\n      <h2>Admin Login</h2>\r\n      <input\r\n        type=\"email\"\r\n        placeholder=\"Email\"\r\n        onChange={(e) => setEmail(e.target.value)}\r\n        value={email}\r\n        required\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"Password\"\r\n        onChange={(e) => setPassword(e.target.value)}\r\n        value={password}\r\n        required\r\n      />\r\n      <button type=\"submit\">Login</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n// "],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,GAAG,MAAM,cAAc,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMW,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAE9B,MAAMW,WAAW,GAAIC,CAAC,IAAK;IACzBA,CAAC,CAACC,cAAc,CAAC,CAAC;;IAElB;IACA,IAAIP,KAAK,KAAK,gBAAgB,IAAIE,QAAQ,KAAK,UAAU,EAAE;MAEzD;MACA,MAAMM,OAAO,GAAG;QACdR,KAAK,EAAE,gBAAgB;QAAE;QACzBS,IAAI,EAAE,OAAO,CAAE;MACjB,CAAC;;MAED;MACA,MAAMC,KAAK,GAAGf,GAAG,CAACgB,IAAI,CAACH,OAAO,EAAE,eAAe,EAAE;QAAEI,SAAS,EAAE;MAAK,CAAC,CAAC,CAAC,CAAC;;MAEvE;MACAC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEJ,KAAK,CAAC;;MAEpC;MACAN,QAAQ,CAAC,0CAA0C,CAAC;IACtD,CAAC,MAAM;MACLW,KAAK,CAAC,qBAAqB,CAAC;IAC9B;EACF,CAAC;EAED,oBACElB,OAAA;IAAMmB,QAAQ,EAAEX,WAAY;IAAAY,QAAA,gBAC1BpB,OAAA;MAAAoB,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBxB,OAAA;MACEyB,IAAI,EAAC,OAAO;MACZC,WAAW,EAAC,OAAO;MACnBC,QAAQ,EAAGlB,CAAC,IAAKL,QAAQ,CAACK,CAAC,CAACmB,MAAM,CAACC,KAAK,CAAE;MAC1CA,KAAK,EAAE1B,KAAM;MACb2B,QAAQ;IAAA;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACFxB,OAAA;MACEyB,IAAI,EAAC,UAAU;MACfC,WAAW,EAAC,UAAU;MACtBC,QAAQ,EAAGlB,CAAC,IAAKH,WAAW,CAACG,CAAC,CAACmB,MAAM,CAACC,KAAK,CAAE;MAC7CA,KAAK,EAAExB,QAAS;MAChByB,QAAQ;IAAA;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACFxB,OAAA;MAAQyB,IAAI,EAAC,QAAQ;MAAAL,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChC,CAAC;AAEX,CAAC;AAACtB,EAAA,CAlDID,KAAK;EAAA,QAGQJ,WAAW;AAAA;AAAAkC,EAAA,GAHxB9B,KAAK;AAoDX,eAAeA,KAAK;AACpB;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}