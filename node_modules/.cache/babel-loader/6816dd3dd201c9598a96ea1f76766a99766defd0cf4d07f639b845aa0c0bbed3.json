{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sharm\\\\OneDrive\\\\Desktop\\\\Zaeesh\\\\transport11\\\\src\\\\component\\\\ProductList.jsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// import {\n//        getProducts,\n//      deleteProduct,\n//      updateProduct,\n//      createProduct,\n//     } from '../api/proudct';\n\n// const ProductList = () => {\n//   const [products, setProducts] = useState([]);\n//   const [editingProduct, setEditingProduct] = useState(null);\n//   const [formData, setFormData] = useState({\n//     name: '',\n//     price: '',\n//     description: '',\n//     image: ''\n//   });\n//   const [error, setError] = useState(null);\n//   const [isAdding, setIsAdding] = useState(false);\n\n//   const isLoggedIn = !!localStorage.getItem('token');\n\n//   useEffect(() => {\n//     fetchProducts();\n//   }, []);\n\n//   const fetchProducts = async () => {\n//     try {\n//       const data = await getProducts();\n//       setProducts(data);\n//     } catch (err) {\n//       console.error('Error fetching products:', err);\n//       setError('Failed to load products: ' + err.message);\n//     }\n//   };\n\n//   const handleDelete = async (id) => {\n//     if (!window.confirm('Delete this product?')) return;\n\n//     try {\n//       await deleteProduct(id);\n//       setProducts(products.filter((p) => p._id !== id));\n//     } catch (err) {\n//       console.error('Error deleting product:', err);\n//       setError('Failed to delete product.');\n//     }\n//   };\n\n//   const startEditing = (product) => {\n//     setEditingProduct(product._id);\n//     setFormData({\n//       name: product.name,\n//       price: product.price,\n//       description: product.description || '',\n//       image: product.image || ''\n//     });\n//   };\n\n//   const handleEditChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData((prev) => ({ ...prev, [name]: value }));\n//   };\n\n//   const handleUpdate = async (id) => {\n//     try {\n//       await updateProduct(id, formData);\n//       setEditingProduct(null);\n//       fetchProducts();\n//     } catch (err) {\n//       console.error('Error updating product:', err);\n//       setError('Failed to update product.');\n//     }\n//   };\n\n//   const handleAddProduct = async () => {\n//     try {\n//       await createProduct(formData); // Must exist in your API\n//       setIsAdding(false);\n//       setFormData({ name: '', price: '', description: '', image: '' });\n//       fetchProducts();\n//     } catch (err) {\n//       console.error('Error adding product:', err);\n//       setError('Failed to add product.');\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Product List</h2>\n//       {error && <p style={{ color: 'red' }}>{error}</p>}\n\n//       {isLoggedIn && !isAdding && (\n//         <button onClick={() => setIsAdding(true)}>Add Product</button>\n//       )}\n\n//       {isLoggedIn && isAdding && (\n//         <div style={{ marginBottom: '20px' }}>\n//           <h3>Add New Product</h3>\n//           <input name=\"name\" placeholder=\"Name\" value={formData.name} onChange={handleEditChange} />\n//           <input name=\"price\" placeholder=\"Price\" value={formData.price} onChange={handleEditChange} />\n//           <input name=\"description\" placeholder=\"Description\" value={formData.description} onChange={handleEditChange} />\n//           <input name=\"image\" placeholder=\"Image filename\" value={formData.image} onChange={handleEditChange} />\n//           <button onClick={handleAddProduct}>Submit</button>\n//           <button onClick={() => setIsAdding(false)}>Cancel</button>\n//         </div>\n//       )}\n\n//       <table border=\"1\" cellPadding=\"10\" style={{ borderCollapse: 'collapse' }}>\n//         <thead>\n//           <tr>\n//             <th>Name</th>\n//             <th>Price ($)</th>\n//             <th>Description</th>\n//             <th>Image</th>\n//             <th>Actions</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {products.map((product) =>\n//             editingProduct === product._id ? (\n//               <tr key={product._id}>\n//                 <td>\n//                   <input\n//                     name=\"name\"\n//                     value={formData.name}\n//                     onChange={handleEditChange}\n//                   />\n//                 </td>\n//                 <td>\n//                   <input\n//                     name=\"price\"\n//                     value={formData.price}\n//                     onChange={handleEditChange}\n//                   />\n//                 </td>\n//                 <td>\n//                   <input\n//                     name=\"description\"\n//                     value={formData.description}\n//                     onChange={handleEditChange}\n//                   />\n//                 </td>\n//                 <td>\n//                   <input\n//                     name=\"image\"\n//                     value={formData.image}\n//                     onChange={handleEditChange}\n//                   />\n//                 </td>\n//                 <td>\n//                   <button onClick={() => handleUpdate(product._id)}>Save</button>\n//                   <button onClick={() => setEditingProduct(null)}>Cancel</button>\n//                 </td>\n//               </tr>\n//             ) : (\n//               <tr key={product._id}>\n//                 <td>{product.name}</td>\n//                 <td>{product.price}</td>\n//                 <td>{product.description}</td>\n//                 <td>\n//                   {product.image ? (\n//                     <img src={`http://localhost:5000/uploads/${product.image}`} alt={product.name} width=\"50\" />\n//                   ) : (\n//                     'No image'\n//                   )}\n//                 </td>\n//                 <td>\n//                   {isLoggedIn && (\n//                     <>\n//                       <button onClick={() => startEditing(product)}>Edit</button>\n//                       <button onClick={() => handleDelete(product._id)}>Delete</button>\n//                     </>\n//                   )}\n//                 </td>\n//               </tr>\n//             )\n//           )}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// };\n\n// export default ProductList;\n\nimport React, { useEffect, useState } from 'react';\nimport { getProducts, deleteProduct, updateProduct, createProduct } from '../api/proudct';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ProductList = () => {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [editingProduct, setEditingProduct] = useState(null);\n  const [formData, setFormData] = useState({\n    name: '',\n    price: '',\n    description: '',\n    image: ''\n  });\n  const [error, setError] = useState(null);\n  const [isAdding, setIsAdding] = useState(false);\n  const isLoggedIn = !!localStorage.getItem('token');\n  useEffect(() => {\n    fetchProducts();\n  }, []);\n  const fetchProducts = async () => {\n    try {\n      const data = await getProducts();\n      setProducts(data);\n    } catch (err) {\n      console.error('Error fetching products:', err);\n      setError('Failed to load products: ' + err.message);\n    }\n  };\n  const handleDelete = async id => {\n    if (!window.confirm('Delete this product?')) return;\n    try {\n      await deleteProduct(id);\n      setProducts(products.filter(p => p._id !== id));\n    } catch (err) {\n      console.error('Error deleting product:', err);\n      setError('Failed to delete product.');\n    }\n  };\n  const startEditing = product => {\n    setEditingProduct(product._id);\n    setFormData({\n      name: product.name,\n      price: product.price,\n      description: product.description || '',\n      image: product.image || ''\n    });\n  };\n  const handleEditChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleUpdate = async id => {\n    try {\n      await updateProduct(id, formData);\n      setEditingProduct(null);\n      fetchProducts();\n    } catch (err) {\n      console.error('Error updating product:', err);\n      setError('Failed to update product.');\n    }\n  };\n  const handleAddProduct = async () => {\n    try {\n      await createProduct(formData);\n      setIsAdding(false);\n      setFormData({\n        name: '',\n        price: '',\n        description: '',\n        image: ''\n      });\n      fetchProducts();\n    } catch (err) {\n      console.error('Error adding product:', err);\n      setError('Failed to add product.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"product-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"product-list-header\",\n      children: \"Product List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 17\n    }, this), isLoggedIn && !isAdding && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"add-product-button\",\n      onClick: () => setIsAdding(true),\n      children: \"Add Product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 9\n    }, this), isLoggedIn && isAdding && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-product-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add New Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-input\",\n        name: \"name\",\n        placeholder: \"Name\",\n        value: formData.name,\n        onChange: handleEditChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-input\",\n        name: \"price\",\n        placeholder: \"Price\",\n        value: formData.price,\n        onChange: handleEditChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-input\",\n        name: \"description\",\n        placeholder: \"Description\",\n        value: formData.description,\n        onChange: handleEditChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-input\",\n        name: \"image\",\n        placeholder: \"Image filename\",\n        value: formData.image,\n        onChange: handleEditChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit-button\",\n        onClick: handleAddProduct,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"cancel-button\",\n        onClick: () => setIsAdding(false),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"product-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Price ($)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: products.map(product => editingProduct === product._id ? /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-input\",\n              name: \"name\",\n              value: formData.name,\n              onChange: handleEditChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-input\",\n              name: \"price\",\n              value: formData.price,\n              onChange: handleEditChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-input\",\n              name: \"description\",\n              value: formData.description,\n              onChange: handleEditChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-input\",\n              name: \"image\",\n              value: formData.image,\n              onChange: handleEditChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"save-button\",\n              onClick: () => handleUpdate(product._id),\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"cancel-button\",\n              onClick: () => setEditingProduct(null),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 17\n          }, this)]\n        }, product._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: product.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: product.price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: product.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: product.image ? /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"product-image\",\n              src: `http://localhost:5000/uploads/${product.image}`,\n              alt: product.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 21\n            }, this) : 'No image'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: isLoggedIn && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"edit-button\",\n                onClick: () => startEditing(product),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"delete-button\",\n                onClick: () => handleDelete(product._id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 17\n          }, this)]\n        }, product._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 277,\n    columnNumber: 5\n  }, this);\n};\n_s(ProductList, \"Mmp8e+6Rk0WRxpmfoqVujxlrCpI=\");\n_c = ProductList;\nexport default ProductList;\nvar _c;\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"names":["React","useEffect","useState","getProducts","deleteProduct","updateProduct","createProduct","jsxDEV","_jsxDEV","Fragment","_Fragment","ProductList","_s","products","setProducts","editingProduct","setEditingProduct","formData","setFormData","name","price","description","image","error","setError","isAdding","setIsAdding","isLoggedIn","localStorage","getItem","fetchProducts","data","err","console","message","handleDelete","id","window","confirm","filter","p","_id","startEditing","product","handleEditChange","e","value","target","prev","handleUpdate","handleAddProduct","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","placeholder","onChange","map","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/sharm/OneDrive/Desktop/Zaeesh/transport11/src/component/ProductList.jsx"],"sourcesContent":["\r\n\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import {\r\n//        getProducts,\r\n//      deleteProduct,\r\n//      updateProduct,\r\n//      createProduct,\r\n//     } from '../api/proudct';\r\n\r\n// const ProductList = () => {\r\n//   const [products, setProducts] = useState([]);\r\n//   const [editingProduct, setEditingProduct] = useState(null);\r\n//   const [formData, setFormData] = useState({\r\n//     name: '',\r\n//     price: '',\r\n//     description: '',\r\n//     image: ''\r\n//   });\r\n//   const [error, setError] = useState(null);\r\n//   const [isAdding, setIsAdding] = useState(false);\r\n\r\n//   const isLoggedIn = !!localStorage.getItem('token');\r\n\r\n//   useEffect(() => {\r\n//     fetchProducts();\r\n//   }, []);\r\n\r\n//   const fetchProducts = async () => {\r\n//     try {\r\n//       const data = await getProducts();\r\n//       setProducts(data);\r\n//     } catch (err) {\r\n//       console.error('Error fetching products:', err);\r\n//       setError('Failed to load products: ' + err.message);\r\n//     }\r\n//   };\r\n\r\n//   const handleDelete = async (id) => {\r\n//     if (!window.confirm('Delete this product?')) return;\r\n\r\n//     try {\r\n//       await deleteProduct(id);\r\n//       setProducts(products.filter((p) => p._id !== id));\r\n//     } catch (err) {\r\n//       console.error('Error deleting product:', err);\r\n//       setError('Failed to delete product.');\r\n//     }\r\n//   };\r\n\r\n//   const startEditing = (product) => {\r\n//     setEditingProduct(product._id);\r\n//     setFormData({\r\n//       name: product.name,\r\n//       price: product.price,\r\n//       description: product.description || '',\r\n//       image: product.image || ''\r\n//     });\r\n//   };\r\n\r\n//   const handleEditChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setFormData((prev) => ({ ...prev, [name]: value }));\r\n//   };\r\n\r\n//   const handleUpdate = async (id) => {\r\n//     try {\r\n//       await updateProduct(id, formData);\r\n//       setEditingProduct(null);\r\n//       fetchProducts();\r\n//     } catch (err) {\r\n//       console.error('Error updating product:', err);\r\n//       setError('Failed to update product.');\r\n//     }\r\n//   };\r\n\r\n//   const handleAddProduct = async () => {\r\n//     try {\r\n//       await createProduct(formData); // Must exist in your API\r\n//       setIsAdding(false);\r\n//       setFormData({ name: '', price: '', description: '', image: '' });\r\n//       fetchProducts();\r\n//     } catch (err) {\r\n//       console.error('Error adding product:', err);\r\n//       setError('Failed to add product.');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2>Product List</h2>\r\n//       {error && <p style={{ color: 'red' }}>{error}</p>}\r\n\r\n//       {isLoggedIn && !isAdding && (\r\n//         <button onClick={() => setIsAdding(true)}>Add Product</button>\r\n//       )}\r\n\r\n//       {isLoggedIn && isAdding && (\r\n//         <div style={{ marginBottom: '20px' }}>\r\n//           <h3>Add New Product</h3>\r\n//           <input name=\"name\" placeholder=\"Name\" value={formData.name} onChange={handleEditChange} />\r\n//           <input name=\"price\" placeholder=\"Price\" value={formData.price} onChange={handleEditChange} />\r\n//           <input name=\"description\" placeholder=\"Description\" value={formData.description} onChange={handleEditChange} />\r\n//           <input name=\"image\" placeholder=\"Image filename\" value={formData.image} onChange={handleEditChange} />\r\n//           <button onClick={handleAddProduct}>Submit</button>\r\n//           <button onClick={() => setIsAdding(false)}>Cancel</button>\r\n//         </div>\r\n//       )}\r\n\r\n//       <table border=\"1\" cellPadding=\"10\" style={{ borderCollapse: 'collapse' }}>\r\n//         <thead>\r\n//           <tr>\r\n//             <th>Name</th>\r\n//             <th>Price ($)</th>\r\n//             <th>Description</th>\r\n//             <th>Image</th>\r\n//             <th>Actions</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {products.map((product) =>\r\n//             editingProduct === product._id ? (\r\n//               <tr key={product._id}>\r\n//                 <td>\r\n//                   <input\r\n//                     name=\"name\"\r\n//                     value={formData.name}\r\n//                     onChange={handleEditChange}\r\n//                   />\r\n//                 </td>\r\n//                 <td>\r\n//                   <input\r\n//                     name=\"price\"\r\n//                     value={formData.price}\r\n//                     onChange={handleEditChange}\r\n//                   />\r\n//                 </td>\r\n//                 <td>\r\n//                   <input\r\n//                     name=\"description\"\r\n//                     value={formData.description}\r\n//                     onChange={handleEditChange}\r\n//                   />\r\n//                 </td>\r\n//                 <td>\r\n//                   <input\r\n//                     name=\"image\"\r\n//                     value={formData.image}\r\n//                     onChange={handleEditChange}\r\n//                   />\r\n//                 </td>\r\n//                 <td>\r\n//                   <button onClick={() => handleUpdate(product._id)}>Save</button>\r\n//                   <button onClick={() => setEditingProduct(null)}>Cancel</button>\r\n//                 </td>\r\n//               </tr>\r\n//             ) : (\r\n//               <tr key={product._id}>\r\n//                 <td>{product.name}</td>\r\n//                 <td>{product.price}</td>\r\n//                 <td>{product.description}</td>\r\n//                 <td>\r\n//                   {product.image ? (\r\n//                     <img src={`http://localhost:5000/uploads/${product.image}`} alt={product.name} width=\"50\" />\r\n//                   ) : (\r\n//                     'No image'\r\n//                   )}\r\n//                 </td>\r\n//                 <td>\r\n//                   {isLoggedIn && (\r\n//                     <>\r\n//                       <button onClick={() => startEditing(product)}>Edit</button>\r\n//                       <button onClick={() => handleDelete(product._id)}>Delete</button>\r\n//                     </>\r\n//                   )}\r\n//                 </td>\r\n//               </tr>\r\n//             )\r\n//           )}\r\n//         </tbody>\r\n//       </table>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ProductList;\r\n\r\n\r\nimport React, { useEffect, useState } from 'react';\r\n import {\r\n        getProducts,\r\n      deleteProduct,\r\n     updateProduct,\r\n     createProduct,\r\n     } from '../api/proudct';\r\n\r\nconst ProductList = () => {\r\n  const [products, setProducts] = useState([]);\r\n  const [editingProduct, setEditingProduct] = useState(null);\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    price: '',\r\n    description: '',\r\n    image: ''\r\n  });\r\n  const [error, setError] = useState(null);\r\n  const [isAdding, setIsAdding] = useState(false);\r\n\r\n  const isLoggedIn = !!localStorage.getItem('token');\r\n\r\n  useEffect(() => {\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  const fetchProducts = async () => {\r\n    try {\r\n      const data = await getProducts();\r\n      setProducts(data);\r\n    } catch (err) {\r\n      console.error('Error fetching products:', err);\r\n      setError('Failed to load products: ' + err.message);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    if (!window.confirm('Delete this product?')) return;\r\n\r\n    try {\r\n      await deleteProduct(id);\r\n      setProducts(products.filter((p) => p._id !== id));\r\n    } catch (err) {\r\n      console.error('Error deleting product:', err);\r\n      setError('Failed to delete product.');\r\n    }\r\n  };\r\n\r\n  const startEditing = (product) => {\r\n    setEditingProduct(product._id);\r\n    setFormData({\r\n      name: product.name,\r\n      price: product.price,\r\n      description: product.description || '',\r\n      image: product.image || ''\r\n    });\r\n  };\r\n\r\n  const handleEditChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleUpdate = async (id) => {\r\n    try {\r\n      await updateProduct(id, formData);\r\n      setEditingProduct(null);\r\n      fetchProducts();\r\n    } catch (err) {\r\n      console.error('Error updating product:', err);\r\n      setError('Failed to update product.');\r\n    }\r\n  };\r\n\r\n  const handleAddProduct = async () => {\r\n    try {\r\n      await createProduct(formData);\r\n      setIsAdding(false);\r\n      setFormData({ name: '', price: '', description: '', image: '' });\r\n      fetchProducts();\r\n    } catch (err) {\r\n      console.error('Error adding product:', err);\r\n      setError('Failed to add product.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"product-list-container\">\r\n      <h2 className=\"product-list-header\">Product List</h2>\r\n      {error && <p className=\"error-message\">{error}</p>}\r\n\r\n      {isLoggedIn && !isAdding && (\r\n        <button className=\"add-product-button\" onClick={() => setIsAdding(true)}>Add Product</button>\r\n      )}\r\n\r\n      {isLoggedIn && isAdding && (\r\n        <div className=\"add-product-form\">\r\n          <h3>Add New Product</h3>\r\n          <input\r\n            className=\"form-input\"\r\n            name=\"name\"\r\n            placeholder=\"Name\"\r\n            value={formData.name}\r\n            onChange={handleEditChange}\r\n          />\r\n          <input\r\n            className=\"form-input\"\r\n            name=\"price\"\r\n            placeholder=\"Price\"\r\n            value={formData.price}\r\n            onChange={handleEditChange}\r\n          />\r\n          <input\r\n            className=\"form-input\"\r\n            name=\"description\"\r\n            placeholder=\"Description\"\r\n            value={formData.description}\r\n            onChange={handleEditChange}\r\n          />\r\n          <input\r\n            className=\"form-input\"\r\n            name=\"image\"\r\n            placeholder=\"Image filename\"\r\n            value={formData.image}\r\n            onChange={handleEditChange}\r\n          />\r\n          <button className=\"submit-button\" onClick={handleAddProduct}>Submit</button>\r\n          <button className=\"cancel-button\" onClick={() => setIsAdding(false)}>Cancel</button>\r\n        </div>\r\n      )}\r\n\r\n      <table className=\"product-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Price ($)</th>\r\n            <th>Description</th>\r\n            <th>Image</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {products.map((product) =>\r\n            editingProduct === product._id ? (\r\n              <tr key={product._id}>\r\n                <td>\r\n                  <input\r\n                    className=\"form-input\"\r\n                    name=\"name\"\r\n                    value={formData.name}\r\n                    onChange={handleEditChange}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    className=\"form-input\"\r\n                    name=\"price\"\r\n                    value={formData.price}\r\n                    onChange={handleEditChange}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    className=\"form-input\"\r\n                    name=\"description\"\r\n                    value={formData.description}\r\n                    onChange={handleEditChange}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    className=\"form-input\"\r\n                    name=\"image\"\r\n                    value={formData.image}\r\n                    onChange={handleEditChange}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <button className=\"save-button\" onClick={() => handleUpdate(product._id)}>Save</button>\r\n                  <button className=\"cancel-button\" onClick={() => setEditingProduct(null)}>Cancel</button>\r\n                </td>\r\n              </tr>\r\n            ) : (\r\n              <tr key={product._id}>\r\n                <td>{product.name}</td>\r\n                <td>{product.price}</td>\r\n                <td>{product.description}</td>\r\n                <td>\r\n                  {product.image ? (\r\n                    <img\r\n                      className=\"product-image\"\r\n                      src={`http://localhost:5000/uploads/${product.image}`}\r\n                      alt={product.name}\r\n                    />\r\n                  ) : (\r\n                    'No image'\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {isLoggedIn && (\r\n                    <>\r\n                      <button className=\"edit-button\" onClick={() => startEditing(product)}>Edit</button>\r\n                      <button className=\"delete-button\" onClick={() => handleDelete(product._id)}>Delete</button>\r\n                    </>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n            )\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductList;\r\n"],"mappings":";;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACjD,SACOC,WAAW,EACbC,aAAa,EACdC,aAAa,EACbC,aAAa,QACN,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE7B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,cAAc,EAAEC,iBAAiB,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC;IACvCiB,IAAI,EAAE,EAAE;IACRC,KAAK,EAAE,EAAE;IACTC,WAAW,EAAE,EAAE;IACfC,KAAK,EAAE;EACT,CAAC,CAAC;EACF,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACuB,QAAQ,EAAEC,WAAW,CAAC,GAAGxB,QAAQ,CAAC,KAAK,CAAC;EAE/C,MAAMyB,UAAU,GAAG,CAAC,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAElD5B,SAAS,CAAC,MAAM;IACd6B,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMC,IAAI,GAAG,MAAM5B,WAAW,CAAC,CAAC;MAChCW,WAAW,CAACiB,IAAI,CAAC;IACnB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACV,KAAK,CAAC,0BAA0B,EAAES,GAAG,CAAC;MAC9CR,QAAQ,CAAC,2BAA2B,GAAGQ,GAAG,CAACE,OAAO,CAAC;IACrD;EACF,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOC,EAAE,IAAK;IACjC,IAAI,CAACC,MAAM,CAACC,OAAO,CAAC,sBAAsB,CAAC,EAAE;IAE7C,IAAI;MACF,MAAMlC,aAAa,CAACgC,EAAE,CAAC;MACvBtB,WAAW,CAACD,QAAQ,CAAC0B,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACC,GAAG,KAAKL,EAAE,CAAC,CAAC;IACnD,CAAC,CAAC,OAAOJ,GAAG,EAAE;MACZC,OAAO,CAACV,KAAK,CAAC,yBAAyB,EAAES,GAAG,CAAC;MAC7CR,QAAQ,CAAC,2BAA2B,CAAC;IACvC;EACF,CAAC;EAED,MAAMkB,YAAY,GAAIC,OAAO,IAAK;IAChC3B,iBAAiB,CAAC2B,OAAO,CAACF,GAAG,CAAC;IAC9BvB,WAAW,CAAC;MACVC,IAAI,EAAEwB,OAAO,CAACxB,IAAI;MAClBC,KAAK,EAAEuB,OAAO,CAACvB,KAAK;MACpBC,WAAW,EAAEsB,OAAO,CAACtB,WAAW,IAAI,EAAE;MACtCC,KAAK,EAAEqB,OAAO,CAACrB,KAAK,IAAI;IAC1B,CAAC,CAAC;EACJ,CAAC;EAED,MAAMsB,gBAAgB,GAAIC,CAAC,IAAK;IAC9B,MAAM;MAAE1B,IAAI;MAAE2B;IAAM,CAAC,GAAGD,CAAC,CAACE,MAAM;IAChC7B,WAAW,CAAE8B,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAE,CAAC7B,IAAI,GAAG2B;IAAM,CAAC,CAAC,CAAC;EACrD,CAAC;EAED,MAAMG,YAAY,GAAG,MAAOb,EAAE,IAAK;IACjC,IAAI;MACF,MAAM/B,aAAa,CAAC+B,EAAE,EAAEnB,QAAQ,CAAC;MACjCD,iBAAiB,CAAC,IAAI,CAAC;MACvBc,aAAa,CAAC,CAAC;IACjB,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZC,OAAO,CAACV,KAAK,CAAC,yBAAyB,EAAES,GAAG,CAAC;MAC7CR,QAAQ,CAAC,2BAA2B,CAAC;IACvC;EACF,CAAC;EAED,MAAM0B,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACF,MAAM5C,aAAa,CAACW,QAAQ,CAAC;MAC7BS,WAAW,CAAC,KAAK,CAAC;MAClBR,WAAW,CAAC;QAAEC,IAAI,EAAE,EAAE;QAAEC,KAAK,EAAE,EAAE;QAAEC,WAAW,EAAE,EAAE;QAAEC,KAAK,EAAE;MAAG,CAAC,CAAC;MAChEQ,aAAa,CAAC,CAAC;IACjB,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZC,OAAO,CAACV,KAAK,CAAC,uBAAuB,EAAES,GAAG,CAAC;MAC3CR,QAAQ,CAAC,wBAAwB,CAAC;IACpC;EACF,CAAC;EAED,oBACEhB,OAAA;IAAK2C,SAAS,EAAC,wBAAwB;IAAAC,QAAA,gBACrC5C,OAAA;MAAI2C,SAAS,EAAC,qBAAqB;MAAAC,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACpDjC,KAAK,iBAAIf,OAAA;MAAG2C,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAE7B;IAAK;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAEjD7B,UAAU,IAAI,CAACF,QAAQ,iBACtBjB,OAAA;MAAQ2C,SAAS,EAAC,oBAAoB;MAACM,OAAO,EAAEA,CAAA,KAAM/B,WAAW,CAAC,IAAI,CAAE;MAAA0B,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAC7F,EAEA7B,UAAU,IAAIF,QAAQ,iBACrBjB,OAAA;MAAK2C,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/B5C,OAAA;QAAA4C,QAAA,EAAI;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxBhD,OAAA;QACE2C,SAAS,EAAC,YAAY;QACtBhC,IAAI,EAAC,MAAM;QACXuC,WAAW,EAAC,MAAM;QAClBZ,KAAK,EAAE7B,QAAQ,CAACE,IAAK;QACrBwC,QAAQ,EAAEf;MAAiB;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC,eACFhD,OAAA;QACE2C,SAAS,EAAC,YAAY;QACtBhC,IAAI,EAAC,OAAO;QACZuC,WAAW,EAAC,OAAO;QACnBZ,KAAK,EAAE7B,QAAQ,CAACG,KAAM;QACtBuC,QAAQ,EAAEf;MAAiB;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC,eACFhD,OAAA;QACE2C,SAAS,EAAC,YAAY;QACtBhC,IAAI,EAAC,aAAa;QAClBuC,WAAW,EAAC,aAAa;QACzBZ,KAAK,EAAE7B,QAAQ,CAACI,WAAY;QAC5BsC,QAAQ,EAAEf;MAAiB;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC,eACFhD,OAAA;QACE2C,SAAS,EAAC,YAAY;QACtBhC,IAAI,EAAC,OAAO;QACZuC,WAAW,EAAC,gBAAgB;QAC5BZ,KAAK,EAAE7B,QAAQ,CAACK,KAAM;QACtBqC,QAAQ,EAAEf;MAAiB;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC,eACFhD,OAAA;QAAQ2C,SAAS,EAAC,eAAe;QAACM,OAAO,EAAEP,gBAAiB;QAAAE,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC5EhD,OAAA;QAAQ2C,SAAS,EAAC,eAAe;QAACM,OAAO,EAAEA,CAAA,KAAM/B,WAAW,CAAC,KAAK,CAAE;QAAA0B,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjF,CACN,eAEDhD,OAAA;MAAO2C,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC9B5C,OAAA;QAAA4C,QAAA,eACE5C,OAAA;UAAA4C,QAAA,gBACE5C,OAAA;YAAA4C,QAAA,EAAI;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACbhD,OAAA;YAAA4C,QAAA,EAAI;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAClBhD,OAAA;YAAA4C,QAAA,EAAI;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACpBhD,OAAA;YAAA4C,QAAA,EAAI;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACdhD,OAAA;YAAA4C,QAAA,EAAI;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACd;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACRhD,OAAA;QAAA4C,QAAA,EACGvC,QAAQ,CAAC+C,GAAG,CAAEjB,OAAO,IACpB5B,cAAc,KAAK4B,OAAO,CAACF,GAAG,gBAC5BjC,OAAA;UAAA4C,QAAA,gBACE5C,OAAA;YAAA4C,QAAA,eACE5C,OAAA;cACE2C,SAAS,EAAC,YAAY;cACtBhC,IAAI,EAAC,MAAM;cACX2B,KAAK,EAAE7B,QAAQ,CAACE,IAAK;cACrBwC,QAAQ,EAAEf;YAAiB;cAAAS,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC5B;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,eACLhD,OAAA;YAAA4C,QAAA,eACE5C,OAAA;cACE2C,SAAS,EAAC,YAAY;cACtBhC,IAAI,EAAC,OAAO;cACZ2B,KAAK,EAAE7B,QAAQ,CAACG,KAAM;cACtBuC,QAAQ,EAAEf;YAAiB;cAAAS,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC5B;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,eACLhD,OAAA;YAAA4C,QAAA,eACE5C,OAAA;cACE2C,SAAS,EAAC,YAAY;cACtBhC,IAAI,EAAC,aAAa;cAClB2B,KAAK,EAAE7B,QAAQ,CAACI,WAAY;cAC5BsC,QAAQ,EAAEf;YAAiB;cAAAS,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC5B;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,eACLhD,OAAA;YAAA4C,QAAA,eACE5C,OAAA;cACE2C,SAAS,EAAC,YAAY;cACtBhC,IAAI,EAAC,OAAO;cACZ2B,KAAK,EAAE7B,QAAQ,CAACK,KAAM;cACtBqC,QAAQ,EAAEf;YAAiB;cAAAS,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC5B;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,eACLhD,OAAA;YAAA4C,QAAA,gBACE5C,OAAA;cAAQ2C,SAAS,EAAC,aAAa;cAACM,OAAO,EAAEA,CAAA,KAAMR,YAAY,CAACN,OAAO,CAACF,GAAG,CAAE;cAAAW,QAAA,EAAC;YAAI;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACvFhD,OAAA;cAAQ2C,SAAS,EAAC,eAAe;cAACM,OAAO,EAAEA,CAAA,KAAMzC,iBAAiB,CAAC,IAAI,CAAE;cAAAoC,QAAA,EAAC;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvF,CAAC;QAAA,GApCEb,OAAO,CAACF,GAAG;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAqChB,CAAC,gBAELhD,OAAA;UAAA4C,QAAA,gBACE5C,OAAA;YAAA4C,QAAA,EAAKT,OAAO,CAACxB;UAAI;YAAAkC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACvBhD,OAAA;YAAA4C,QAAA,EAAKT,OAAO,CAACvB;UAAK;YAAAiC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACxBhD,OAAA;YAAA4C,QAAA,EAAKT,OAAO,CAACtB;UAAW;YAAAgC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC9BhD,OAAA;YAAA4C,QAAA,EACGT,OAAO,CAACrB,KAAK,gBACZd,OAAA;cACE2C,SAAS,EAAC,eAAe;cACzBU,GAAG,EAAE,iCAAiClB,OAAO,CAACrB,KAAK,EAAG;cACtDwC,GAAG,EAAEnB,OAAO,CAACxB;YAAK;cAAAkC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACnB,CAAC,GAEF;UACD;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eACLhD,OAAA;YAAA4C,QAAA,EACGzB,UAAU,iBACTnB,OAAA,CAAAE,SAAA;cAAA0C,QAAA,gBACE5C,OAAA;gBAAQ2C,SAAS,EAAC,aAAa;gBAACM,OAAO,EAAEA,CAAA,KAAMf,YAAY,CAACC,OAAO,CAAE;gBAAAS,QAAA,EAAC;cAAI;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACnFhD,OAAA;gBAAQ2C,SAAS,EAAC,eAAe;gBAACM,OAAO,EAAEA,CAAA,KAAMtB,YAAY,CAACQ,OAAO,CAACF,GAAG,CAAE;gBAAAW,QAAA,EAAC;cAAM;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA,eAC3F;UACH;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA,GAtBEb,OAAO,CAACF,GAAG;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAuBhB,CAER;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAAC5C,EAAA,CA7MID,WAAW;AAAAoD,EAAA,GAAXpD,WAAW;AA+MjB,eAAeA,WAAW;AAAC,IAAAoD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}