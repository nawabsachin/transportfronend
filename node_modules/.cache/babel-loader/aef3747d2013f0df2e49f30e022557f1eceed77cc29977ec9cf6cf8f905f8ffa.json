{"ast":null,"code":"// import axios from 'axios';\n\n// const API_BASE_URL = 'http://localhost:5000/api/products';\n\n// const authHeader = () => {\n//   const token = localStorage.getItem('token');\n//   if (!token) {\n//     throw new Error('No token found, please log in.');\n//   }\n//   return { Authorization: 'Bearer ' + token };\n// };\n\n// // Get all products\n// export const getProducts = async () => {\n//   try {\n//     const res = await axios.get(API_BASE_URL, { headers: authHeader() });\n//     return res.data;\n//   } catch (error) {\n//     console.error('Get products failed', error);\n//     throw error;\n//   }\n// };\n\n// // Add product\n// export const addProduct = async (formData) => {\n//   try {\n//     const res = await axios.post(API_BASE_URL, formData, {\n//       headers: {\n//         ...authHeader(),\n//         'Content-Type': 'multipart/form-data',\n//       },\n//     });\n//     return res.data;\n//   } catch (error) {\n//     console.error('Add product failed', error.response ? error.response.data : error.message);\n//     throw error;\n//   }\n// };\n\n// // Update product\n// export const updateProduct = async (id, formData) => {\n//   try {\n//     const res = await axios.put(`${API_BASE_URL}/${id}`, formData, {\n//       headers: {\n//         ...authHeader(),\n//         'Content-Type': 'multipart/form-data',\n//       },\n//     });\n//     return res.data;\n//   } catch (error) {\n//     console.error('Update product failed', error.response ? error.response.data : error.message);\n//     throw error;\n//   }\n// };\n\n// // Delete product\n// export const deleteProduct = async (id) => {\n//   try {\n//     const res = await axios.delete(`${API_BASE_URL}/${id}`, {\n//       headers: authHeader(),\n//     });\n//     return res.data;\n//   } catch (error) {\n//     console.error('Delete product failed', error.response ? error.response.data : error.message);\n//     throw error;\n//   }\n// };\n\nimport axios from 'axios';\nconst API_BASE_URL = 'http://localhost:5000/api/products';\nconst authHeader = () => {\n  const token = localStorage.getItem('token');\n  if (!token) throw new Error('No token found, please log in.');\n  return {\n    Authorization: 'Bearer ' + token\n  };\n};\n\n// Get all products\nexport const getProducts = async () => {\n  try {\n    const res = await axios.get(API_BASE_URL, {\n      headers: authHeader()\n    });\n    return res.data;\n  } catch (error) {\n    console.error('Get products failed', error);\n    throw error;\n  }\n};\n\n// Get single product\nexport const getProductById = async id => {\n  try {\n    const res = await axios.get(`${API_BASE_URL}/${id}`, {\n      headers: authHeader()\n    });\n    return res.data;\n  } catch (error) {\n    console.error('Get product failed', error);\n    throw error;\n  }\n};\n\n// Add new product\nexport const addProduct = async formData => {\n  try {\n    const res = await axios.post(API_BASE_URL, formData, {\n      headers: {\n        ...authHeader(),\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return res.data;\n  } catch (error) {\n    var _error$response;\n    console.error('Add product failed', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    throw error;\n  }\n};\n\n// Update product\nexport const updateProduct = async (id, formData) => {\n  try {\n    const res = await axios.put(`${API_BASE_URL}/${id}`, formData, {\n      headers: {\n        ...authHeader(),\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return res.data;\n  } catch (error) {\n    var _error$response2;\n    console.error('Update product failed', ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n    throw error;\n  }\n};\n\n// Delete product\nexport const deleteProduct = async id => {\n  try {\n    const res = await axios.delete(`${API_BASE_URL}/${id}`, {\n      headers: authHeader()\n    });\n    return res.data;\n  } catch (error) {\n    var _error$response3;\n    console.error('Delete product failed', ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error.message);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","authHeader","token","localStorage","getItem","Error","Authorization","getProducts","res","get","headers","data","error","console","getProductById","id","addProduct","formData","post","_error$response","response","message","updateProduct","put","_error$response2","deleteProduct","delete","_error$response3"],"sources":["C:/Users/sharm/OneDrive/Desktop/Zaeesh/transport11/src/component/productService.jsx"],"sourcesContent":["\r\n// import axios from 'axios';\r\n\r\n// const API_BASE_URL = 'http://localhost:5000/api/products';\r\n\r\n// const authHeader = () => {\r\n//   const token = localStorage.getItem('token');\r\n//   if (!token) {\r\n//     throw new Error('No token found, please log in.');\r\n//   }\r\n//   return { Authorization: 'Bearer ' + token };\r\n// };\r\n\r\n// // Get all products\r\n// export const getProducts = async () => {\r\n//   try {\r\n//     const res = await axios.get(API_BASE_URL, { headers: authHeader() });\r\n//     return res.data;\r\n//   } catch (error) {\r\n//     console.error('Get products failed', error);\r\n//     throw error;\r\n//   }\r\n// };\r\n\r\n// // Add product\r\n// export const addProduct = async (formData) => {\r\n//   try {\r\n//     const res = await axios.post(API_BASE_URL, formData, {\r\n//       headers: {\r\n//         ...authHeader(),\r\n//         'Content-Type': 'multipart/form-data',\r\n//       },\r\n//     });\r\n//     return res.data;\r\n//   } catch (error) {\r\n//     console.error('Add product failed', error.response ? error.response.data : error.message);\r\n//     throw error;\r\n//   }\r\n// };\r\n\r\n// // Update product\r\n// export const updateProduct = async (id, formData) => {\r\n//   try {\r\n//     const res = await axios.put(`${API_BASE_URL}/${id}`, formData, {\r\n//       headers: {\r\n//         ...authHeader(),\r\n//         'Content-Type': 'multipart/form-data',\r\n//       },\r\n//     });\r\n//     return res.data;\r\n//   } catch (error) {\r\n//     console.error('Update product failed', error.response ? error.response.data : error.message);\r\n//     throw error;\r\n//   }\r\n// };\r\n\r\n// // Delete product\r\n// export const deleteProduct = async (id) => {\r\n//   try {\r\n//     const res = await axios.delete(`${API_BASE_URL}/${id}`, {\r\n//       headers: authHeader(),\r\n//     });\r\n//     return res.data;\r\n//   } catch (error) {\r\n//     console.error('Delete product failed', error.response ? error.response.data : error.message);\r\n//     throw error;\r\n//   }\r\n// };\r\n\r\nimport axios from 'axios';\r\n\r\nconst API_BASE_URL = 'http://localhost:5000/api/products';\r\n\r\nconst authHeader = () => {\r\n  const token = localStorage.getItem('token');\r\n  if (!token) throw new Error('No token found, please log in.');\r\n  return { Authorization: 'Bearer ' + token };\r\n};\r\n\r\n// Get all products\r\nexport const getProducts = async () => {\r\n  try {\r\n    const res = await axios.get(API_BASE_URL, { headers: authHeader() });\r\n    return res.data;\r\n  } catch (error) {\r\n    console.error('Get products failed', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Get single product\r\nexport const getProductById = async (id) => {\r\n  try {\r\n    const res = await axios.get(`${API_BASE_URL}/${id}`, {\r\n      headers: authHeader(),\r\n    });\r\n    return res.data;\r\n  } catch (error) {\r\n    console.error('Get product failed', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Add new product\r\nexport const addProduct = async (formData) => {\r\n  try {\r\n    const res = await axios.post(API_BASE_URL, formData, {\r\n      headers: {\r\n        ...authHeader(),\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n    return res.data;\r\n  } catch (error) {\r\n    console.error('Add product failed', error.response?.data || error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Update product\r\nexport const updateProduct = async (id, formData) => {\r\n  try {\r\n    const res = await axios.put(`${API_BASE_URL}/${id}`, formData, {\r\n      headers: {\r\n        ...authHeader(),\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n    return res.data;\r\n  } catch (error) {\r\n    console.error('Update product failed', error.response?.data || error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Delete product\r\nexport const deleteProduct = async (id) => {\r\n  try {\r\n    const res = await axios.delete(`${API_BASE_URL}/${id}`, {\r\n      headers: authHeader(),\r\n    });\r\n    return res.data;\r\n  } catch (error) {\r\n    console.error('Delete product failed', error.response?.data || error.message);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}