{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sharm\\\\OneDrive\\\\Desktop\\\\Zaeesh\\\\transport11\\\\src\\\\component\\\\ProductList.jsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// import {\n//   getProducts,\n//   deleteProduct,\n//   updateProduct,\n//   createProduct,\n// } from '../api/proudct';\n// import DashboardMain from './DarshMain';\n// import './ProductList.css';\n\n// const ProductList = () => {\n//   const [products, setProducts] = useState([]);\n//   const [editingProduct, setEditingProduct] = useState(null);\n//   const [formData, setFormData] = useState({\n//     name: '',\n//     price: '',\n//     description: '',\n//     image: ''\n//   });\n//   const [error, setError] = useState(null);\n//   const [isAdding, setIsAdding] = useState(false);\n\n//   // Role check only\n//   const role = localStorage.getItem('role');\n//   const isAdmin = role === 'admin';\n\n//   useEffect(() => {\n//     fetchProducts();\n//   }, []);\n\n//   const fetchProducts = async () => {\n//     try {\n//       const data = await getProducts();\n//       setProducts(data);\n//     } catch (err) {\n//       console.error('Error fetching products:', err);\n//       setError('Failed to load products: ' + err.message);\n//     }\n//   };\n\n//   const handleDelete = async (id) => {\n//     if (!window.confirm('Delete this product?')) return;\n\n//     try {\n//       await deleteProduct(id);\n//       setProducts(products.filter((p) => p._id !== id));\n//     } catch (err) {\n//       console.error('Error deleting product:', err);\n//       setError('Failed to delete product.');\n//     }\n//   };\n\n//   const startEditing = (product) => {\n//     setEditingProduct(product._id);\n//     setFormData({\n//       name: product.name,\n//       price: product.price,\n//       description: product.description || '',\n//       image: product.image || ''\n//     });\n//   };\n\n//   const handleEditChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData((prev) => ({ ...prev, [name]: value }));\n//   };\n\n//   const handleUpdate = async (id) => {\n//     try {\n//       await updateProduct(id, formData);\n//       setEditingProduct(null);\n//       fetchProducts();\n//     } catch (err) {\n//       console.error('Error updating product:', err);\n//       setError('Failed to update product.');\n//     }\n//   };\n\n//   const handleAddProduct = async () => {\n//     try {\n//       await createProduct(formData);\n//       setIsAdding(false);\n//       setFormData({ name: '', price: '', description: '', image: '' });\n//       fetchProducts();\n//     } catch (err) {\n//       console.error('Error adding product:', err);\n//       setError('Failed to add product.');\n//     }\n//   };\n\n//   return (\n//     <div className=\"dashboard-layout\">\n//       <div className=\"dashboard-sidebar\">\n//         <DashboardMain />\n//       </div>\n\n//       <div className=\"dashboard-content\">\n//         <h2 className=\"product-list-header\">Product List</h2>\n//         {error && <p className=\"error-message\">{error}</p>}\n\n//         {isAdmin && (\n//           <button onClick={() => setIsAdding(true)}>Add Product</button>\n//         )}\n\n//         {isAdmin && isAdding && (\n//           <div className=\"add-product-form\">\n//             <h3>Add New Product</h3>\n//             <input name=\"name\" placeholder=\"Name\" value={formData.name} onChange={handleEditChange} />\n//             <input name=\"price\" placeholder=\"Price\" value={formData.price} onChange={handleEditChange} />\n//             <input name=\"description\" placeholder=\"Description\" value={formData.description} onChange={handleEditChange} />\n//             <input name=\"image\" placeholder=\"Image filename\" value={formData.image} onChange={handleEditChange} />\n//             <button onClick={handleAddProduct}>Submit</button>\n//             <button onClick={() => setIsAdding(false)}>Cancel</button>\n//           </div>\n//         )}\n\n//         {!isAdmin && (\n//           <p className=\"info-message\">You must be an admin to manage products.</p>\n//         )}\n\n//         <table className=\"product-table\">\n//           <thead>\n//             <tr>\n//               <th>Name</th>\n//               <th>Price ($)</th>\n//               <th>Description</th>\n//               <th>Image</th>\n//               <th>Actions</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {products.map((product) =>\n//               editingProduct === product._id ? (\n//                 <tr key={product._id}>\n//                   <td><input name=\"name\" value={formData.name} onChange={handleEditChange} /></td>\n//                   <td><input name=\"price\" value={formData.price} onChange={handleEditChange} /></td>\n//                   <td><input name=\"description\" value={formData.description} onChange={handleEditChange} /></td>\n//                   <td><input name=\"image\" value={formData.image} onChange={handleEditChange} /></td>\n//                   <td>\n//                     <button onClick={() => handleUpdate(product._id)}>Save</button>\n//                     <button onClick={() => setEditingProduct(null)}>Cancel</button>\n//                   </td>\n//                 </tr>\n//               ) : (\n//                 <tr key={product._id}>\n//                   <td>{product.name}</td>\n//                   <td>{product.price}</td>\n//                   <td>{product.description}</td>\n//                   <td>\n//                     {product.image ? (\n//                       <img src={`http://localhost:5000/uploads/${product.image}`} alt={product.name} width=\"50\" />\n//                     ) : (\n//                       'No image'\n//                     )}\n//                   </td>\n//                   <td>\n//                     {isAdmin && (\n//                       <>\n//                         <button onClick={() => startEditing(product)}>Edit</button>\n//                         <button onClick={() => handleDelete(product._id)}>Delete</button>\n//                       </>\n//                     )}\n//                   </td>\n//                 </tr>\n//               )\n//             )}\n//           </tbody>\n//         </table>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default ProductList;\n\n// import React, { useEffect, useState } from 'react';\n// import {\n//   getProducts,\n//   deleteProduct,\n//   updateProduct,\n//   createProduct,\n// } from '../api/proudct'; // Fixed typo in import (proudct -> product)\n// import DashboardMain from './DarshMain';\n// import './ProductList.css';\n\n// const ProductList = () => {\n//   const [products, setProducts] = useState([]);\n//   const [editingProduct, setEditingProduct] = useState(null);\n//   const [formData, setFormData] = useState({\n//     name: '',\n//     price: '',\n//     description: '',\n//     image: ''\n//   });\n//   const [error, setError] = useState(null);\n//   const [isAdding, setIsAdding] = useState(false);\n\n//   // Check authentication and role\n//   const token = localStorage.getItem('admin-auth');\n//   const isAdmin = token && JSON.parse(atob(token.split('.')[1]))?.role === 'admin';\n\n//   useEffect(() => {\n//     fetchProducts();\n//   }, []);\n\n//   const fetchProducts = async () => {\n//     try {\n//       const data = await getProducts();\n//       setProducts(data);\n//     } catch (err) {\n//       console.error('Error fetching products:', err);\n//       setError('Failed to load products: ' + err.message);\n//     }\n//   };\n\n//   const handleDelete = async (id) => {\n//     if (!window.confirm('Delete this product?')) return;\n\n//     try {\n//       await deleteProduct(id);\n//       setProducts(products.filter((p) => p._id !== id));\n//     } catch (err) {\n//       console.error('Error deleting product:', err);\n//       setError('Failed to delete product.');\n//     }\n//   };\n\n//   const startEditing = (product) => {\n//     setEditingProduct(product._id);\n//     setFormData({\n//       name: product.name,\n//       price: product.price,\n//       description: product.description || '',\n//       image: product.image || ''\n//     });\n//   };\n\n//   const handleEditChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData((prev) => ({ ...prev, [name]: value }));\n//   };\n\n//   const handleUpdate = async (id) => {\n//     try {\n//       await updateProduct(id, formData);\n//       setEditingProduct(null);\n//       fetchProducts();\n//     } catch (err) {\n//       console.error('Error updating product:', err);\n//       setError('Failed to update product.');\n//     }\n//   };\n\n//   const handleAddProduct = async () => {\n//     try {\n//       await createProduct(formData);\n//       setIsAdding(false);\n//       setFormData({ name: '', price: '', description: '', image: '' });\n//       fetchProducts();\n//     } catch (err) {\n//       console.error('Error adding product:', err);\n//       setError('Failed to add product.');\n//     }\n//   };\n\n//   return (\n//     <div className=\"dashboard-layout\">\n//       <div className=\"dashboard-sidebar\">\n//         <DashboardMain />\n//       </div>\n\n//       <div className=\"dashboard-content\">\n//         <h2 className=\"product-list-header\">Product List</h2>\n//         {error && <p className=\"error-message\">{error}</p>}\n\n//         {isAdmin ? (\n//           <>\n//             <button onClick={() => setIsAdding(true)}>Add Product</button>\n//             {isAdding && (\n//               <div className=\"add-product-form\">\n//                 <h3>Add New Product</h3>\n//                 <input\n//                   name=\"name\"\n//                   placeholder=\"Name\"\n//                   value={formData.name}\n//                   onChange={handleEditChange}\n//                 />\n//                 <input\n//                   name=\"price\"\n//                   placeholder=\"Price\"\n//                   value={formData.price}\n//                   onChange={handleEditChange}\n//                 />\n//                 <input\n//                   name=\"description\"\n//                   placeholder=\"Description\"\n//                   value={formData.description}\n//                   onChange={handleEditChange}\n//                 />\n//                 <input\n//                   name=\"image\"\n//                   placeholder=\"Image filename\"\n//                   value={formData.image}\n//                   onChange={handleEditChange}\n//                 />\n//                 <button onClick={handleAddProduct}>Submit</button>\n//                 <button onClick={() => setIsAdding(false)}>Cancel</button>\n//               </div>\n//             )}\n//           </>\n//         ) : (\n//           <p className=\"info-message\">You must be an admin to manage products.</p>\n//         )}\n\n//         <table className=\"product-table\">\n//           <thead>\n//             <tr>\n//               <th>Name</th>\n//               <th>Price ($)</th>\n//               <th>Description</th>\n//               <th>Image</th>\n//               <th>Actions</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {products.map((product) =>\n//               editingProduct === product._id ? (\n//                 <tr key={product._id}>\n//                   <td>\n//                     <input\n//                       name=\"name\"\n//                       value={formData.name}\n//                       onChange={handleEditChange}\n//                     />\n//                   </td>\n//                   <td>\n//                     <input\n//                       name=\"price\"\n//                       value={formData.price}\n//                       onChange={handleEditChange}\n//                     />\n//                   </td>\n//                   <td>\n//                     <input\n//                       name=\"description\"\n//                       value={formData.description}\n//                       onChange={handleEditChange}\n//                     />\n//                   </td>\n//                   <td>\n//                     <input\n//                       name=\"image\"\n//                       value={formData.image}\n//                       onChange={handleEditChange}\n//                     />\n//                   </td>\n//                   <td>\n//                     <button onClick={() => handleUpdate(product._id)}>Save</button>\n//                     <button onClick={() => setEditingProduct(null)}>Cancel</button>\n//                   </td>\n//                 </tr>\n//               ) : (\n//                 <tr key={product._id}>\n//                   <td>{product.name}</td>\n//                   <td>{product.price}</td>\n//                   <td>{product.description}</td>\n//                   <td>\n//                     {product.image ? (\n//                       <img\n//                         src={`http://localhost:5000/uploads/${product.image}`}\n//                         alt={product.name}\n//                         width=\"50\"\n//                       />\n//                     ) : (\n//                       'No image'\n//                     )}\n//                   </td>\n//                   <td>\n//                     {isAdmin && (\n//                       <>\n//                         <button onClick={() => startEditing(product)}>Edit</button>\n//                         <button onClick={() => handleDelete(product._id)}>\n//                           Delete\n//                         </button>\n//                       </>\n//                     )}\n//                   </td>\n//                 </tr>\n//               )\n//             )}\n//           </tbody>\n//         </table>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default ProductList;\n\nimport React, { useEffect, useState } from 'react';\nimport { getProducts, deleteProduct, updateProduct, createProduct } from '../api/proudct'; // Ensure API is updated to handle FormData\nimport DashboardMain from './DarshMain';\nimport './ProductList.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ProductList = () => {\n  _s();\n  var _JSON$parse;\n  const [products, setProducts] = useState([]);\n  const [editingProduct, setEditingProduct] = useState(null);\n  const [formData, setFormData] = useState({\n    name: '',\n    price: '',\n    description: '',\n    imageFile: null\n  });\n  const [error, setError] = useState(null);\n  const [isAdding, setIsAdding] = useState(false);\n  const token = localStorage.getItem('admin-auth');\n  const isAdmin = token && ((_JSON$parse = JSON.parse(atob(token.split('.')[1]))) === null || _JSON$parse === void 0 ? void 0 : _JSON$parse.role) === 'admin';\n  useEffect(() => {\n    fetchProducts();\n  }, []);\n  const fetchProducts = async () => {\n    try {\n      const data = await getProducts();\n      setProducts(data);\n    } catch (err) {\n      console.error('Error fetching products:', err);\n      setError('Failed to load products: ' + err.message);\n    }\n  };\n  const handleDelete = async id => {\n    if (!window.confirm('Delete this product?')) return;\n    try {\n      await deleteProduct(id);\n      setProducts(products.filter(p => p._id !== id));\n    } catch (err) {\n      console.error('Error deleting product:', err);\n      setError('Failed to delete product.');\n    }\n  };\n  const startEditing = product => {\n    setEditingProduct(product._id);\n    setFormData({\n      name: product.name,\n      price: product.price,\n      description: product.description || '',\n      imageFile: null // Optional: support image update\n    });\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleFileChange = e => {\n    setFormData(prev => ({\n      ...prev,\n      imageFile: e.target.files[0]\n    }));\n  };\n  const handleUpdate = async id => {\n    try {\n      // Optional: handle image update\n      await updateProduct(id, formData);\n      setEditingProduct(null);\n      fetchProducts();\n    } catch (err) {\n      console.error('Error updating product:', err);\n      setError('Failed to update product.');\n    }\n  };\n  const handleAddProduct = async () => {\n    try {\n      const productData = new FormData();\n      productData.append('name', formData.name);\n      productData.append('price', formData.price);\n      productData.append('description', formData.description);\n      if (formData.imageFile) {\n        productData.append('image', formData.imageFile);\n      }\n      await createProduct(productData);\n      setIsAdding(false);\n      setFormData({\n        name: '',\n        price: '',\n        description: '',\n        imageFile: null\n      });\n      fetchProducts();\n    } catch (err) {\n      console.error('Error adding product:', err);\n      setError('Failed to add product.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-layout\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-sidebar\",\n      children: /*#__PURE__*/_jsxDEV(DashboardMain, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"product-list-header\",\n        children: \"Product List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 19\n      }, this), isAdmin ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsAdding(true),\n          children: \"Add Product\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 13\n        }, this), isAdding && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-product-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Add New Product\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 521,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"name\",\n            placeholder: \"Name\",\n            value: formData.name,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 522,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"price\",\n            placeholder: \"Price\",\n            value: formData.price,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 528,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"description\",\n            placeholder: \"Description\",\n            value: formData.description,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 534,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \"image/*\",\n            onChange: handleFileChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 540,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleAddProduct,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 545,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsAdding(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"info-message\",\n        children: \"You must be an admin to manage products.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"product-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 557,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Price ($)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 558,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 559,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 560,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 561,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 556,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: products.map(product => editingProduct === product._id ? /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"name\",\n                value: formData.name,\n                onChange: handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 569,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 568,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"price\",\n                value: formData.price,\n                onChange: handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 576,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 575,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"description\",\n                value: formData.description,\n                onChange: handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 583,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 582,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                accept: \"image/*\",\n                onChange: handleFileChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 590,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 589,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleUpdate(product._id),\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 593,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setEditingProduct(null),\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 594,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 592,\n              columnNumber: 19\n            }, this)]\n          }, product._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 567,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: product.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 599,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: product.price\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 600,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: product.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 601,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: product.image ? /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `http://localhost:5000/uploads/${product.image}`,\n                alt: product.name,\n                width: \"50\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 604,\n                columnNumber: 23\n              }, this) : 'No image'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 602,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: isAdmin && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => startEditing(product),\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 616,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleDelete(product._id),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 617,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 613,\n              columnNumber: 19\n            }, this)]\n          }, product._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 598,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 554,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 507,\n    columnNumber: 5\n  }, this);\n};\n_s(ProductList, \"xehqSzHYD4TERxHRByoMFfdsT1s=\");\n_c = ProductList;\nexport default ProductList;\nvar _c;\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"names":["React","useEffect","useState","getProducts","deleteProduct","updateProduct","createProduct","DashboardMain","jsxDEV","_jsxDEV","Fragment","_Fragment","ProductList","_s","_JSON$parse","products","setProducts","editingProduct","setEditingProduct","formData","setFormData","name","price","description","imageFile","error","setError","isAdding","setIsAdding","token","localStorage","getItem","isAdmin","JSON","parse","atob","split","role","fetchProducts","data","err","console","message","handleDelete","id","window","confirm","filter","p","_id","startEditing","product","handleInputChange","e","value","target","prev","handleFileChange","files","handleUpdate","handleAddProduct","productData","FormData","append","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","placeholder","onChange","type","accept","map","image","src","alt","width","_c","$RefreshReg$"],"sources":["C:/Users/sharm/OneDrive/Desktop/Zaeesh/transport11/src/component/ProductList.jsx"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import {\r\n//   getProducts,\r\n//   deleteProduct,\r\n//   updateProduct,\r\n//   createProduct,\r\n// } from '../api/proudct';\r\n// import DashboardMain from './DarshMain';\r\n// import './ProductList.css';\r\n\r\n// const ProductList = () => {\r\n//   const [products, setProducts] = useState([]);\r\n//   const [editingProduct, setEditingProduct] = useState(null);\r\n//   const [formData, setFormData] = useState({\r\n//     name: '',\r\n//     price: '',\r\n//     description: '',\r\n//     image: ''\r\n//   });\r\n//   const [error, setError] = useState(null);\r\n//   const [isAdding, setIsAdding] = useState(false);\r\n\r\n//   // Role check only\r\n//   const role = localStorage.getItem('role');\r\n//   const isAdmin = role === 'admin';\r\n\r\n//   useEffect(() => {\r\n//     fetchProducts();\r\n//   }, []);\r\n\r\n//   const fetchProducts = async () => {\r\n//     try {\r\n//       const data = await getProducts();\r\n//       setProducts(data);\r\n//     } catch (err) {\r\n//       console.error('Error fetching products:', err);\r\n//       setError('Failed to load products: ' + err.message);\r\n//     }\r\n//   };\r\n\r\n//   const handleDelete = async (id) => {\r\n//     if (!window.confirm('Delete this product?')) return;\r\n\r\n//     try {\r\n//       await deleteProduct(id);\r\n//       setProducts(products.filter((p) => p._id !== id));\r\n//     } catch (err) {\r\n//       console.error('Error deleting product:', err);\r\n//       setError('Failed to delete product.');\r\n//     }\r\n//   };\r\n\r\n//   const startEditing = (product) => {\r\n//     setEditingProduct(product._id);\r\n//     setFormData({\r\n//       name: product.name,\r\n//       price: product.price,\r\n//       description: product.description || '',\r\n//       image: product.image || ''\r\n//     });\r\n//   };\r\n\r\n//   const handleEditChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setFormData((prev) => ({ ...prev, [name]: value }));\r\n//   };\r\n\r\n//   const handleUpdate = async (id) => {\r\n//     try {\r\n//       await updateProduct(id, formData);\r\n//       setEditingProduct(null);\r\n//       fetchProducts();\r\n//     } catch (err) {\r\n//       console.error('Error updating product:', err);\r\n//       setError('Failed to update product.');\r\n//     }\r\n//   };\r\n\r\n//   const handleAddProduct = async () => {\r\n//     try {\r\n//       await createProduct(formData);\r\n//       setIsAdding(false);\r\n//       setFormData({ name: '', price: '', description: '', image: '' });\r\n//       fetchProducts();\r\n//     } catch (err) {\r\n//       console.error('Error adding product:', err);\r\n//       setError('Failed to add product.');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"dashboard-layout\">\r\n//       <div className=\"dashboard-sidebar\">\r\n//         <DashboardMain />\r\n//       </div>\r\n\r\n//       <div className=\"dashboard-content\">\r\n//         <h2 className=\"product-list-header\">Product List</h2>\r\n//         {error && <p className=\"error-message\">{error}</p>}\r\n\r\n//         {isAdmin && (\r\n//           <button onClick={() => setIsAdding(true)}>Add Product</button>\r\n//         )}\r\n\r\n//         {isAdmin && isAdding && (\r\n//           <div className=\"add-product-form\">\r\n//             <h3>Add New Product</h3>\r\n//             <input name=\"name\" placeholder=\"Name\" value={formData.name} onChange={handleEditChange} />\r\n//             <input name=\"price\" placeholder=\"Price\" value={formData.price} onChange={handleEditChange} />\r\n//             <input name=\"description\" placeholder=\"Description\" value={formData.description} onChange={handleEditChange} />\r\n//             <input name=\"image\" placeholder=\"Image filename\" value={formData.image} onChange={handleEditChange} />\r\n//             <button onClick={handleAddProduct}>Submit</button>\r\n//             <button onClick={() => setIsAdding(false)}>Cancel</button>\r\n//           </div>\r\n//         )}\r\n\r\n//         {!isAdmin && (\r\n//           <p className=\"info-message\">You must be an admin to manage products.</p>\r\n//         )}\r\n\r\n//         <table className=\"product-table\">\r\n//           <thead>\r\n//             <tr>\r\n//               <th>Name</th>\r\n//               <th>Price ($)</th>\r\n//               <th>Description</th>\r\n//               <th>Image</th>\r\n//               <th>Actions</th>\r\n//             </tr>\r\n//           </thead>\r\n//           <tbody>\r\n//             {products.map((product) =>\r\n//               editingProduct === product._id ? (\r\n//                 <tr key={product._id}>\r\n//                   <td><input name=\"name\" value={formData.name} onChange={handleEditChange} /></td>\r\n//                   <td><input name=\"price\" value={formData.price} onChange={handleEditChange} /></td>\r\n//                   <td><input name=\"description\" value={formData.description} onChange={handleEditChange} /></td>\r\n//                   <td><input name=\"image\" value={formData.image} onChange={handleEditChange} /></td>\r\n//                   <td>\r\n//                     <button onClick={() => handleUpdate(product._id)}>Save</button>\r\n//                     <button onClick={() => setEditingProduct(null)}>Cancel</button>\r\n//                   </td>\r\n//                 </tr>\r\n//               ) : (\r\n//                 <tr key={product._id}>\r\n//                   <td>{product.name}</td>\r\n//                   <td>{product.price}</td>\r\n//                   <td>{product.description}</td>\r\n//                   <td>\r\n//                     {product.image ? (\r\n//                       <img src={`http://localhost:5000/uploads/${product.image}`} alt={product.name} width=\"50\" />\r\n//                     ) : (\r\n//                       'No image'\r\n//                     )}\r\n//                   </td>\r\n//                   <td>\r\n//                     {isAdmin && (\r\n//                       <>\r\n//                         <button onClick={() => startEditing(product)}>Edit</button>\r\n//                         <button onClick={() => handleDelete(product._id)}>Delete</button>\r\n//                       </>\r\n//                     )}\r\n//                   </td>\r\n//                 </tr>\r\n//               )\r\n//             )}\r\n//           </tbody>\r\n//         </table>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ProductList;\r\n\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import {\r\n//   getProducts,\r\n//   deleteProduct,\r\n//   updateProduct,\r\n//   createProduct,\r\n// } from '../api/proudct'; // Fixed typo in import (proudct -> product)\r\n// import DashboardMain from './DarshMain';\r\n// import './ProductList.css';\r\n\r\n// const ProductList = () => {\r\n//   const [products, setProducts] = useState([]);\r\n//   const [editingProduct, setEditingProduct] = useState(null);\r\n//   const [formData, setFormData] = useState({\r\n//     name: '',\r\n//     price: '',\r\n//     description: '',\r\n//     image: ''\r\n//   });\r\n//   const [error, setError] = useState(null);\r\n//   const [isAdding, setIsAdding] = useState(false);\r\n\r\n//   // Check authentication and role\r\n//   const token = localStorage.getItem('admin-auth');\r\n//   const isAdmin = token && JSON.parse(atob(token.split('.')[1]))?.role === 'admin';\r\n\r\n//   useEffect(() => {\r\n//     fetchProducts();\r\n//   }, []);\r\n\r\n//   const fetchProducts = async () => {\r\n//     try {\r\n//       const data = await getProducts();\r\n//       setProducts(data);\r\n//     } catch (err) {\r\n//       console.error('Error fetching products:', err);\r\n//       setError('Failed to load products: ' + err.message);\r\n//     }\r\n//   };\r\n\r\n//   const handleDelete = async (id) => {\r\n//     if (!window.confirm('Delete this product?')) return;\r\n\r\n//     try {\r\n//       await deleteProduct(id);\r\n//       setProducts(products.filter((p) => p._id !== id));\r\n//     } catch (err) {\r\n//       console.error('Error deleting product:', err);\r\n//       setError('Failed to delete product.');\r\n//     }\r\n//   };\r\n\r\n//   const startEditing = (product) => {\r\n//     setEditingProduct(product._id);\r\n//     setFormData({\r\n//       name: product.name,\r\n//       price: product.price,\r\n//       description: product.description || '',\r\n//       image: product.image || ''\r\n//     });\r\n//   };\r\n\r\n//   const handleEditChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setFormData((prev) => ({ ...prev, [name]: value }));\r\n//   };\r\n\r\n//   const handleUpdate = async (id) => {\r\n//     try {\r\n//       await updateProduct(id, formData);\r\n//       setEditingProduct(null);\r\n//       fetchProducts();\r\n//     } catch (err) {\r\n//       console.error('Error updating product:', err);\r\n//       setError('Failed to update product.');\r\n//     }\r\n//   };\r\n\r\n//   const handleAddProduct = async () => {\r\n//     try {\r\n//       await createProduct(formData);\r\n//       setIsAdding(false);\r\n//       setFormData({ name: '', price: '', description: '', image: '' });\r\n//       fetchProducts();\r\n//     } catch (err) {\r\n//       console.error('Error adding product:', err);\r\n//       setError('Failed to add product.');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"dashboard-layout\">\r\n//       <div className=\"dashboard-sidebar\">\r\n//         <DashboardMain />\r\n//       </div>\r\n\r\n//       <div className=\"dashboard-content\">\r\n//         <h2 className=\"product-list-header\">Product List</h2>\r\n//         {error && <p className=\"error-message\">{error}</p>}\r\n\r\n//         {isAdmin ? (\r\n//           <>\r\n//             <button onClick={() => setIsAdding(true)}>Add Product</button>\r\n//             {isAdding && (\r\n//               <div className=\"add-product-form\">\r\n//                 <h3>Add New Product</h3>\r\n//                 <input\r\n//                   name=\"name\"\r\n//                   placeholder=\"Name\"\r\n//                   value={formData.name}\r\n//                   onChange={handleEditChange}\r\n//                 />\r\n//                 <input\r\n//                   name=\"price\"\r\n//                   placeholder=\"Price\"\r\n//                   value={formData.price}\r\n//                   onChange={handleEditChange}\r\n//                 />\r\n//                 <input\r\n//                   name=\"description\"\r\n//                   placeholder=\"Description\"\r\n//                   value={formData.description}\r\n//                   onChange={handleEditChange}\r\n//                 />\r\n//                 <input\r\n//                   name=\"image\"\r\n//                   placeholder=\"Image filename\"\r\n//                   value={formData.image}\r\n//                   onChange={handleEditChange}\r\n//                 />\r\n//                 <button onClick={handleAddProduct}>Submit</button>\r\n//                 <button onClick={() => setIsAdding(false)}>Cancel</button>\r\n//               </div>\r\n//             )}\r\n//           </>\r\n//         ) : (\r\n//           <p className=\"info-message\">You must be an admin to manage products.</p>\r\n//         )}\r\n\r\n//         <table className=\"product-table\">\r\n//           <thead>\r\n//             <tr>\r\n//               <th>Name</th>\r\n//               <th>Price ($)</th>\r\n//               <th>Description</th>\r\n//               <th>Image</th>\r\n//               <th>Actions</th>\r\n//             </tr>\r\n//           </thead>\r\n//           <tbody>\r\n//             {products.map((product) =>\r\n//               editingProduct === product._id ? (\r\n//                 <tr key={product._id}>\r\n//                   <td>\r\n//                     <input\r\n//                       name=\"name\"\r\n//                       value={formData.name}\r\n//                       onChange={handleEditChange}\r\n//                     />\r\n//                   </td>\r\n//                   <td>\r\n//                     <input\r\n//                       name=\"price\"\r\n//                       value={formData.price}\r\n//                       onChange={handleEditChange}\r\n//                     />\r\n//                   </td>\r\n//                   <td>\r\n//                     <input\r\n//                       name=\"description\"\r\n//                       value={formData.description}\r\n//                       onChange={handleEditChange}\r\n//                     />\r\n//                   </td>\r\n//                   <td>\r\n//                     <input\r\n//                       name=\"image\"\r\n//                       value={formData.image}\r\n//                       onChange={handleEditChange}\r\n//                     />\r\n//                   </td>\r\n//                   <td>\r\n//                     <button onClick={() => handleUpdate(product._id)}>Save</button>\r\n//                     <button onClick={() => setEditingProduct(null)}>Cancel</button>\r\n//                   </td>\r\n//                 </tr>\r\n//               ) : (\r\n//                 <tr key={product._id}>\r\n//                   <td>{product.name}</td>\r\n//                   <td>{product.price}</td>\r\n//                   <td>{product.description}</td>\r\n//                   <td>\r\n//                     {product.image ? (\r\n//                       <img\r\n//                         src={`http://localhost:5000/uploads/${product.image}`}\r\n//                         alt={product.name}\r\n//                         width=\"50\"\r\n//                       />\r\n//                     ) : (\r\n//                       'No image'\r\n//                     )}\r\n//                   </td>\r\n//                   <td>\r\n//                     {isAdmin && (\r\n//                       <>\r\n//                         <button onClick={() => startEditing(product)}>Edit</button>\r\n//                         <button onClick={() => handleDelete(product._id)}>\r\n//                           Delete\r\n//                         </button>\r\n//                       </>\r\n//                     )}\r\n//                   </td>\r\n//                 </tr>\r\n//               )\r\n//             )}\r\n//           </tbody>\r\n//         </table>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ProductList;\r\n\r\n\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport {\r\n  getProducts,\r\n  deleteProduct,\r\n  updateProduct,\r\n  createProduct,\r\n} from '../api/proudct'; // Ensure API is updated to handle FormData\r\nimport DashboardMain from './DarshMain';\r\nimport './ProductList.css';\r\n\r\nconst ProductList = () => {\r\n  const [products, setProducts] = useState([]);\r\n  const [editingProduct, setEditingProduct] = useState(null);\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    price: '',\r\n    description: '',\r\n    imageFile: null,\r\n  });\r\n  const [error, setError] = useState(null);\r\n  const [isAdding, setIsAdding] = useState(false);\r\n\r\n  const token = localStorage.getItem('admin-auth');\r\n  const isAdmin = token && JSON.parse(atob(token.split('.')[1]))?.role === 'admin';\r\n\r\n  useEffect(() => {\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  const fetchProducts = async () => {\r\n    try {\r\n      const data = await getProducts();\r\n      setProducts(data);\r\n    } catch (err) {\r\n      console.error('Error fetching products:', err);\r\n      setError('Failed to load products: ' + err.message);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    if (!window.confirm('Delete this product?')) return;\r\n\r\n    try {\r\n      await deleteProduct(id);\r\n      setProducts(products.filter((p) => p._id !== id));\r\n    } catch (err) {\r\n      console.error('Error deleting product:', err);\r\n      setError('Failed to delete product.');\r\n    }\r\n  };\r\n\r\n  const startEditing = (product) => {\r\n    setEditingProduct(product._id);\r\n    setFormData({\r\n      name: product.name,\r\n      price: product.price,\r\n      description: product.description || '',\r\n      imageFile: null, // Optional: support image update\r\n    });\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    setFormData((prev) => ({ ...prev, imageFile: e.target.files[0] }));\r\n  };\r\n\r\n  const handleUpdate = async (id) => {\r\n    try {\r\n      // Optional: handle image update\r\n      await updateProduct(id, formData);\r\n      setEditingProduct(null);\r\n      fetchProducts();\r\n    } catch (err) {\r\n      console.error('Error updating product:', err);\r\n      setError('Failed to update product.');\r\n    }\r\n  };\r\n\r\n  const handleAddProduct = async () => {\r\n    try {\r\n      const productData = new FormData();\r\n      productData.append('name', formData.name);\r\n      productData.append('price', formData.price);\r\n      productData.append('description', formData.description);\r\n      if (formData.imageFile) {\r\n        productData.append('image', formData.imageFile);\r\n      }\r\n\r\n      await createProduct(productData);\r\n\r\n      setIsAdding(false);\r\n      setFormData({ name: '', price: '', description: '', imageFile: null });\r\n      fetchProducts();\r\n    } catch (err) {\r\n      console.error('Error adding product:', err);\r\n      setError('Failed to add product.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-layout\">\r\n      <div className=\"dashboard-sidebar\">\r\n        <DashboardMain />\r\n      </div>\r\n\r\n      <div className=\"dashboard-content\">\r\n        <h2 className=\"product-list-header\">Product List</h2>\r\n        {error && <p className=\"error-message\">{error}</p>}\r\n\r\n        {isAdmin ? (\r\n          <>\r\n            <button onClick={() => setIsAdding(true)}>Add Product</button>\r\n            {isAdding && (\r\n              <div className=\"add-product-form\">\r\n                <h3>Add New Product</h3>\r\n                <input\r\n                  name=\"name\"\r\n                  placeholder=\"Name\"\r\n                  value={formData.name}\r\n                  onChange={handleInputChange}\r\n                />\r\n                <input\r\n                  name=\"price\"\r\n                  placeholder=\"Price\"\r\n                  value={formData.price}\r\n                  onChange={handleInputChange}\r\n                />\r\n                <input\r\n                  name=\"description\"\r\n                  placeholder=\"Description\"\r\n                  value={formData.description}\r\n                  onChange={handleInputChange}\r\n                />\r\n                <input\r\n                  type=\"file\"\r\n                  accept=\"image/*\"\r\n                  onChange={handleFileChange}\r\n                />\r\n                <button onClick={handleAddProduct}>Submit</button>\r\n                <button onClick={() => setIsAdding(false)}>Cancel</button>\r\n              </div>\r\n            )}\r\n          </>\r\n        ) : (\r\n          <p className=\"info-message\">You must be an admin to manage products.</p>\r\n        )}\r\n\r\n        <table className=\"product-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Price ($)</th>\r\n              <th>Description</th>\r\n              <th>Image</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {products.map((product) =>\r\n              editingProduct === product._id ? (\r\n                <tr key={product._id}>\r\n                  <td>\r\n                    <input\r\n                      name=\"name\"\r\n                      value={formData.name}\r\n                      onChange={handleInputChange}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      name=\"price\"\r\n                      value={formData.price}\r\n                      onChange={handleInputChange}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      name=\"description\"\r\n                      value={formData.description}\r\n                      onChange={handleInputChange}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input type=\"file\" accept=\"image/*\" onChange={handleFileChange} />\r\n                  </td>\r\n                  <td>\r\n                    <button onClick={() => handleUpdate(product._id)}>Save</button>\r\n                    <button onClick={() => setEditingProduct(null)}>Cancel</button>\r\n                  </td>\r\n                </tr>\r\n              ) : (\r\n                <tr key={product._id}>\r\n                  <td>{product.name}</td>\r\n                  <td>{product.price}</td>\r\n                  <td>{product.description}</td>\r\n                  <td>\r\n                    {product.image ? (\r\n                      <img\r\n                        src={`http://localhost:5000/uploads/${product.image}`}\r\n                        alt={product.name}\r\n                        width=\"50\"\r\n                      />\r\n                    ) : (\r\n                      'No image'\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {isAdmin && (\r\n                      <>\r\n                        <button onClick={() => startEditing(product)}>Edit</button>\r\n                        <button onClick={() => handleDelete(product._id)}>Delete</button>\r\n                      </>\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n              )\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductList;\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}