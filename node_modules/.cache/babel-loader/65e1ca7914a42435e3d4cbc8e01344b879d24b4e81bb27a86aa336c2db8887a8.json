{"ast":null,"code":"// // api/product.js\n// // Function to fetch products from the server\n// export const getProducts = async () => {\n//   try {\n//     const response = await fetch('http://localhost:5000/api/products');\n//     if (!response.ok) {\n//       throw new Error('Failed to fetch products');\n//     }\n//     const data = await response.json();\n//     return data;\n//   } catch (err) {\n//     console.error('Error fetching products:', err);\n//     throw new Error('Failed to load products: ' + err.message);\n//   }\n// };\n// // Function to delete a product by its ID\n// export const deleteProduct = async (id) => {\n//   try {\n//     const response = await fetch(`http://localhost:5000/api/products/${id}`, {\n//       method: 'DELETE',\n//     });\n//     if (!response.ok) {\n//       throw new Error('Failed to delete product');\n//     }\n//   } catch (err) {\n//     console.error('Error deleting product:', err);\n//     throw new Error('Failed to delete product');\n//   }\n// };\n// // Function to update an existing product\n// export const updateProduct = async (id, productData) => {\n//   try {\n//     const response = await fetch(`http://localhost:5000/api/products/${id}`, {\n//       method: 'PUT',\n//       headers: { 'Content-Type': 'application/json' },\n//       body: JSON.stringify(productData),\n//     });\n//     if (!response.ok) {\n//       throw new Error('Failed to update product');\n//     }\n//   } catch (err) {\n//     console.error('Error updating product:', err);\n//     throw new Error('Failed to update product');\n//   }\n// };\n// // Function to create a new product\n// export const createProduct = async (productData) => {\n//   try {\n//     const response = await fetch('http://localhost:5000/api/products', {\n//       method: 'POST',\n//       headers: { 'Content-Type': 'application/json' },\n//       body: JSON.stringify(productData),\n//     });\n//     if (!response.ok) {\n//       throw new Error('Failed to create product');\n//     }\n//     return await response.json();\n//   } catch (err) {\n//     console.error('Error creating product:', err);\n//     throw new Error('Failed to create product');\n//   }\n// };\nconst API_BASE='https://transportbackend-kappa.vercel.app/api';// https://transportbackend-git-main-nawabsachins-projects.vercel.app/\nconst getToken=()=>localStorage.getItem('admin-auth');// Get all products\nexport const getProducts=async()=>{const res=await fetch(`${API_BASE}/products`);if(!res.ok)throw new Error('Failed to fetch products');return res.json();};// Create product\nexport const createProduct=async productFormData=>{const res=await fetch(`${API_BASE}/products`,{method:'POST',headers:{Authorization:`Bearer ${getToken()}`},body:productFormData});if(!res.ok)throw new Error('Failed to create product');return res.json();};// Update product\nexport const updateProduct=async(id,productFormData)=>{const res=await fetch(`${API_BASE}/products/${id}`,{method:'PUT',headers:{Authorization:`Bearer ${getToken()}`},body:productFormData});if(!res.ok)throw new Error('Failed to update product');return res.json();};// Delete product\nexport const deleteProduct=async id=>{const res=await fetch(`${API_BASE}/products/${id}`,{method:'DELETE',headers:{Authorization:`Bearer ${getToken()}`}});if(!res.ok)throw new Error('Failed to delete product');return res.json();};","map":{"version":3,"names":["API_BASE","getToken","localStorage","getItem","getProducts","res","fetch","ok","Error","json","createProduct","productFormData","method","headers","Authorization","body","updateProduct","id","deleteProduct"],"sources":["C:/Users/sharm/OneDrive/Desktop/Zaeesh/transport11/src/api/proudct.js"],"sourcesContent":["// // api/product.js\r\n\r\n// // Function to fetch products from the server\r\n// export const getProducts = async () => {\r\n//   try {\r\n//     const response = await fetch('http://localhost:5000/api/products');\r\n//     if (!response.ok) {\r\n//       throw new Error('Failed to fetch products');\r\n//     }\r\n//     const data = await response.json();\r\n//     return data;\r\n//   } catch (err) {\r\n//     console.error('Error fetching products:', err);\r\n//     throw new Error('Failed to load products: ' + err.message);\r\n//   }\r\n// };\r\n\r\n// // Function to delete a product by its ID\r\n// export const deleteProduct = async (id) => {\r\n//   try {\r\n//     const response = await fetch(`http://localhost:5000/api/products/${id}`, {\r\n//       method: 'DELETE',\r\n//     });\r\n//     if (!response.ok) {\r\n//       throw new Error('Failed to delete product');\r\n//     }\r\n//   } catch (err) {\r\n//     console.error('Error deleting product:', err);\r\n//     throw new Error('Failed to delete product');\r\n//   }\r\n// };\r\n\r\n// // Function to update an existing product\r\n// export const updateProduct = async (id, productData) => {\r\n//   try {\r\n//     const response = await fetch(`http://localhost:5000/api/products/${id}`, {\r\n//       method: 'PUT',\r\n//       headers: { 'Content-Type': 'application/json' },\r\n//       body: JSON.stringify(productData),\r\n//     });\r\n//     if (!response.ok) {\r\n//       throw new Error('Failed to update product');\r\n//     }\r\n//   } catch (err) {\r\n//     console.error('Error updating product:', err);\r\n//     throw new Error('Failed to update product');\r\n//   }\r\n// };\r\n\r\n// // Function to create a new product\r\n// export const createProduct = async (productData) => {\r\n//   try {\r\n//     const response = await fetch('http://localhost:5000/api/products', {\r\n//       method: 'POST',\r\n//       headers: { 'Content-Type': 'application/json' },\r\n//       body: JSON.stringify(productData),\r\n//     });\r\n//     if (!response.ok) {\r\n//       throw new Error('Failed to create product');\r\n//     }\r\n//     return await response.json();\r\n//   } catch (err) {\r\n//     console.error('Error creating product:', err);\r\n//     throw new Error('Failed to create product');\r\n//   }\r\n// };\r\n\r\n\r\nconst API_BASE = 'https://transportbackend-kappa.vercel.app/api';\r\n// https://transportbackend-git-main-nawabsachins-projects.vercel.app/\r\n\r\n\r\n\r\nconst getToken = () => localStorage.getItem('admin-auth');\r\n\r\n// Get all products\r\nexport const getProducts = async () => {\r\n  const res = await fetch(`${API_BASE}/products`);\r\n  if (!res.ok) throw new Error('Failed to fetch products');\r\n  return res.json();\r\n};\r\n\r\n// Create product\r\nexport const createProduct = async (productFormData) => {\r\n  const res = await fetch(`${API_BASE}/products`, {\r\n    method: 'POST',\r\n    headers: {\r\n      Authorization: `Bearer ${getToken()}`,\r\n    },\r\n    body: productFormData,\r\n  });\r\n\r\n  if (!res.ok) throw new Error('Failed to create product');\r\n  return res.json();\r\n};\r\n\r\n// Update product\r\nexport const updateProduct = async (id, productFormData) => {\r\n  const res = await fetch(`${API_BASE}/products/${id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      Authorization: `Bearer ${getToken()}`,\r\n    },\r\n    body: productFormData,\r\n  });\r\n\r\n  if (!res.ok) throw new Error('Failed to update product');\r\n  return res.json();\r\n};\r\n\r\n// Delete product\r\nexport const deleteProduct = async (id) => {\r\n  const res = await fetch(`${API_BASE}/products/${id}`, {\r\n    method: 'DELETE',\r\n    headers: {\r\n      Authorization: `Bearer ${getToken()}`,\r\n    },\r\n  });\r\n\r\n  if (!res.ok) throw new Error('Failed to delete product');\r\n  return res.json();\r\n};\r\n"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,KAAM,CAAAA,QAAQ,CAAG,+CAA+C,CAChE;AAIA,KAAM,CAAAC,QAAQ,CAAGA,CAAA,GAAMC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,CAEzD;AACA,MAAO,MAAM,CAAAC,WAAW,CAAG,KAAAA,CAAA,GAAY,CACrC,KAAM,CAAAC,GAAG,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGN,QAAQ,WAAW,CAAC,CAC/C,GAAI,CAACK,GAAG,CAACE,EAAE,CAAE,KAAM,IAAI,CAAAC,KAAK,CAAC,0BAA0B,CAAC,CACxD,MAAO,CAAAH,GAAG,CAACI,IAAI,CAAC,CAAC,CACnB,CAAC,CAED;AACA,MAAO,MAAM,CAAAC,aAAa,CAAG,KAAO,CAAAC,eAAe,EAAK,CACtD,KAAM,CAAAN,GAAG,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGN,QAAQ,WAAW,CAAE,CAC9CY,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACPC,aAAa,CAAE,UAAUb,QAAQ,CAAC,CAAC,EACrC,CAAC,CACDc,IAAI,CAAEJ,eACR,CAAC,CAAC,CAEF,GAAI,CAACN,GAAG,CAACE,EAAE,CAAE,KAAM,IAAI,CAAAC,KAAK,CAAC,0BAA0B,CAAC,CACxD,MAAO,CAAAH,GAAG,CAACI,IAAI,CAAC,CAAC,CACnB,CAAC,CAED;AACA,MAAO,MAAM,CAAAO,aAAa,CAAG,KAAAA,CAAOC,EAAE,CAAEN,eAAe,GAAK,CAC1D,KAAM,CAAAN,GAAG,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGN,QAAQ,aAAaiB,EAAE,EAAE,CAAE,CACpDL,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CACPC,aAAa,CAAE,UAAUb,QAAQ,CAAC,CAAC,EACrC,CAAC,CACDc,IAAI,CAAEJ,eACR,CAAC,CAAC,CAEF,GAAI,CAACN,GAAG,CAACE,EAAE,CAAE,KAAM,IAAI,CAAAC,KAAK,CAAC,0BAA0B,CAAC,CACxD,MAAO,CAAAH,GAAG,CAACI,IAAI,CAAC,CAAC,CACnB,CAAC,CAED;AACA,MAAO,MAAM,CAAAS,aAAa,CAAG,KAAO,CAAAD,EAAE,EAAK,CACzC,KAAM,CAAAZ,GAAG,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGN,QAAQ,aAAaiB,EAAE,EAAE,CAAE,CACpDL,MAAM,CAAE,QAAQ,CAChBC,OAAO,CAAE,CACPC,aAAa,CAAE,UAAUb,QAAQ,CAAC,CAAC,EACrC,CACF,CAAC,CAAC,CAEF,GAAI,CAACI,GAAG,CAACE,EAAE,CAAE,KAAM,IAAI,CAAAC,KAAK,CAAC,0BAA0B,CAAC,CACxD,MAAO,CAAAH,GAAG,CAACI,IAAI,CAAC,CAAC,CACnB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}