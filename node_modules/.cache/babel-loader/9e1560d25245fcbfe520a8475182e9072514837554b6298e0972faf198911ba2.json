{"ast":null,"code":"// import axios from 'axios';\n\n// const API_BASE_URL = 'http://localhost:5000/api/products';\n\n// const authHeader = () => {\n//   const token = localStorage.getItem('token');\n//   if (!token) {\n//     throw new Error('No token found, please log in.');\n//   }\n//   return { Authorization: 'Bearer ' + token };\n// };\n\n// // Get all products\n// export const getProducts = async () => {\n//   try {\n//     const res = await axios.get(API_BASE_URL, { headers: authHeader() });\n//     return res.data;\n//   } catch (error) {\n//     console.error('Get products failed', error);\n//     throw error;\n//   }\n// };\n\n// // Add product\n// export const addProduct = async (formData) => {\n//   try {\n//     const res = await axios.post(API_BASE_URL, formData, {\n//       headers: {\n//         ...authHeader(),\n//         'Content-Type': 'multipart/form-data',\n//       },\n//     });\n//     return res.data;\n//   } catch (error) {\n//     console.error('Add product failed', error.response ? error.response.data : error.message);\n//     throw error;\n//   }\n// };\n\n// // Update product\n// export const updateProduct = async (id, formData) => {\n//   try {\n//     const res = await axios.put(`${API_BASE_URL}/${id}`, formData, {\n//       headers: {\n//         ...authHeader(),\n//         'Content-Type': 'multipart/form-data',\n//       },\n//     });\n//     return res.data;\n//   } catch (error) {\n//     console.error('Update product failed', error.response ? error.response.data : error.message);\n//     throw error;\n//   }\n// };\n\n// // Delete product\n// export const deleteProduct = async (id) => {\n//   try {\n//     const res = await axios.delete(`${API_BASE_URL}/${id}`, {\n//       headers: authHeader(),\n//     });\n//     return res.data;\n//   } catch (error) {\n//     console.error('Delete product failed', error.response ? error.response.data : error.message);\n//     throw error;\n//   }\n// };\n\n// productService.js\nimport axios from 'axios';\nconst API_BASE_URL = 'http://localhost:5000/api/products';\n\n// Generate auth headers with JWT\nconst authHeader = () => {\n  const token = localStorage.getItem('token');\n  if (!token) {\n    throw new Error('No token found, please log in.');\n  }\n  return {\n    Authorization: 'Bearer ' + token\n  };\n};\n\n// Centralized error handler (optional)\nconst handleError = (action, error) => {\n  console.error(`${action} failed`, error.response ? error.response.data : error.message);\n  throw error;\n};\n\n// ====================\n// CRUD Operation Functions\n// ====================\n\n// ✅ Read all products\nexport const getProducts = async () => {\n  try {\n    const res = await axios.get(API_BASE_URL, {\n      headers: authHeader()\n    });\n    return res.data;\n  } catch (error) {\n    handleError('Get all products', error);\n  }\n};\n\n// ✅ Read single product by ID\nexport const getProductById = async id => {\n  try {\n    const res = await axios.get(`${API_BASE_URL}/${id}`, {\n      headers: authHeader()\n    });\n    return res.data;\n  } catch (error) {\n    handleError('Get product by ID', error);\n  }\n};\n\n// ✅ Create a new product\nexport const addProduct = async formData => {\n  try {\n    const res = await axios.post(API_BASE_URL, formData, {\n      headers: {\n        ...authHeader(),\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return res.data;\n  } catch (error) {\n    handleError('Add product', error);\n  }\n};\n\n// ✅ Update existing product\nexport const updateProduct = async (id, formData) => {\n  try {\n    const res = await axios.put(`${API_BASE_URL}/${id}`, formData, {\n      headers: {\n        ...authHeader(),\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return res.data;\n  } catch (error) {\n    handleError('Update product', error);\n  }\n};\n\n// ✅ Delete product\nexport const deleteProduct = async id => {\n  try {\n    const res = await axios.delete(`${API_BASE_URL}/${id}`, {\n      headers: authHeader()\n    });\n    return res.data;\n  } catch (error) {\n    handleError('Delete product', error);\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","authHeader","token","localStorage","getItem","Error","Authorization","handleError","action","error","console","response","data","message","getProducts","res","get","headers","getProductById","id","addProduct","formData","post","updateProduct","put","deleteProduct","delete"],"sources":["C:/Users/sharm/OneDrive/Desktop/Zaeesh/transport11/src/component/productService.jsx"],"sourcesContent":["\r\n// import axios from 'axios';\r\n\r\n// const API_BASE_URL = 'http://localhost:5000/api/products';\r\n\r\n// const authHeader = () => {\r\n//   const token = localStorage.getItem('token');\r\n//   if (!token) {\r\n//     throw new Error('No token found, please log in.');\r\n//   }\r\n//   return { Authorization: 'Bearer ' + token };\r\n// };\r\n\r\n// // Get all products\r\n// export const getProducts = async () => {\r\n//   try {\r\n//     const res = await axios.get(API_BASE_URL, { headers: authHeader() });\r\n//     return res.data;\r\n//   } catch (error) {\r\n//     console.error('Get products failed', error);\r\n//     throw error;\r\n//   }\r\n// };\r\n\r\n// // Add product\r\n// export const addProduct = async (formData) => {\r\n//   try {\r\n//     const res = await axios.post(API_BASE_URL, formData, {\r\n//       headers: {\r\n//         ...authHeader(),\r\n//         'Content-Type': 'multipart/form-data',\r\n//       },\r\n//     });\r\n//     return res.data;\r\n//   } catch (error) {\r\n//     console.error('Add product failed', error.response ? error.response.data : error.message);\r\n//     throw error;\r\n//   }\r\n// };\r\n\r\n// // Update product\r\n// export const updateProduct = async (id, formData) => {\r\n//   try {\r\n//     const res = await axios.put(`${API_BASE_URL}/${id}`, formData, {\r\n//       headers: {\r\n//         ...authHeader(),\r\n//         'Content-Type': 'multipart/form-data',\r\n//       },\r\n//     });\r\n//     return res.data;\r\n//   } catch (error) {\r\n//     console.error('Update product failed', error.response ? error.response.data : error.message);\r\n//     throw error;\r\n//   }\r\n// };\r\n\r\n// // Delete product\r\n// export const deleteProduct = async (id) => {\r\n//   try {\r\n//     const res = await axios.delete(`${API_BASE_URL}/${id}`, {\r\n//       headers: authHeader(),\r\n//     });\r\n//     return res.data;\r\n//   } catch (error) {\r\n//     console.error('Delete product failed', error.response ? error.response.data : error.message);\r\n//     throw error;\r\n//   }\r\n// };\r\n\r\n\r\n// productService.js\r\nimport axios from 'axios';\r\n\r\nconst API_BASE_URL = 'http://localhost:5000/api/products';\r\n\r\n// Generate auth headers with JWT\r\nconst authHeader = () => {\r\n  const token = localStorage.getItem('token');\r\n  if (!token) {\r\n    throw new Error('No token found, please log in.');\r\n  }\r\n  return { Authorization: 'Bearer ' + token };\r\n};\r\n\r\n// Centralized error handler (optional)\r\nconst handleError = (action, error) => {\r\n  console.error(`${action} failed`, error.response ? error.response.data : error.message);\r\n  throw error;\r\n};\r\n\r\n// ====================\r\n// CRUD Operation Functions\r\n// ====================\r\n\r\n// ✅ Read all products\r\nexport const getProducts = async () => {\r\n  try {\r\n    const res = await axios.get(API_BASE_URL, {\r\n      headers: authHeader(),\r\n    });\r\n    return res.data;\r\n  } catch (error) {\r\n    handleError('Get all products', error);\r\n  }\r\n};\r\n\r\n// ✅ Read single product by ID\r\nexport const getProductById = async (id) => {\r\n  try {\r\n    const res = await axios.get(`${API_BASE_URL}/${id}`, {\r\n      headers: authHeader(),\r\n    });\r\n    return res.data;\r\n  } catch (error) {\r\n    handleError('Get product by ID', error);\r\n  }\r\n};\r\n\r\n// ✅ Create a new product\r\nexport const addProduct = async (formData) => {\r\n  try {\r\n    const res = await axios.post(API_BASE_URL, formData, {\r\n      headers: {\r\n        ...authHeader(),\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n    return res.data;\r\n  } catch (error) {\r\n    handleError('Add product', error);\r\n  }\r\n};\r\n\r\n// ✅ Update existing product\r\nexport const updateProduct = async (id, formData) => {\r\n  try {\r\n    const res = await axios.put(`${API_BASE_URL}/${id}`, formData, {\r\n      headers: {\r\n        ...authHeader(),\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n    return res.data;\r\n  } catch (error) {\r\n    handleError('Update product', error);\r\n  }\r\n};\r\n\r\n// ✅ Delete product\r\nexport const deleteProduct = async (id) => {\r\n  try {\r\n    const res = await axios.delete(`${API_BASE_URL}/${id}`, {\r\n      headers: authHeader(),\r\n    });\r\n    return res.data;\r\n  } catch (error) {\r\n    handleError('Delete product', error);\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}