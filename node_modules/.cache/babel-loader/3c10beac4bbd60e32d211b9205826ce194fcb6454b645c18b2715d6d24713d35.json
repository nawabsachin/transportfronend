{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sharm\\\\OneDrive\\\\Desktop\\\\Zaeesh\\\\transport11\\\\src\\\\component\\\\ProductList.jsx\";\n// import React, { useEffect, useState } from 'react';\n// import {\n//   getProducts,\n//   deleteProduct,\n//   updateProduct,\n// } from '../api/proudct';\n\n// const ProductList = () => {\n//   const [products, setProducts] = useState([]);\n//   console.log(products,'products');\n//   const [editingProduct, setEditingProduct] = useState(null);\n//   const [formData, setFormData] = useState({\n//     name: '',\n//     price: '',\n//     description: '',\n//     image: ''\n//   });\n//   console.log(formData,'test data');\n\n//   const [error, setError] = useState(null);\n\n//   useEffect(() => {\n//     fetchProducts();\n//   }, []);\n\n//   const fetchProducts = async () => {\n//     try {\n//       const data = await getProducts();\n//       setProducts(data);\n//     } catch (err) {\n//       console.error(err);\n//       setError('Failed to load products.');\n//     }\n//   };\n\n//   const handleDelete = async (id) => {\n//     if (!window.confirm('Delete this product?')) return;\n\n//     try {\n//       await deleteProduct(id);\n//       setProducts(products.filter((p) => p._id !== id));\n//     } catch (err) {\n//       console.error(err);\n//       setError('Failed to delete product.');\n//     }\n//   };\n\n//   const startEditing = (product) => {\n//     setEditingProduct(product._id);\n//     setFormData({\n//       name: product.name,\n//       price: product.price,\n//       description: product.description || '',\n//       image: product.image || ''\n//     });\n//   };\n\n//   const handleEditChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData((prev) => ({ ...prev, [name]: value }));\n//   };\n\n//   const handleUpdate = async (id) => {\n//     try {\n//       await updateProduct(id, formData);\n//       setEditingProduct(null);\n//       fetchProducts();\n//     } catch (err) {\n//       console.error(err);\n//       setError('Failed to update product.');\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Product List</h2>\n//       {error && <p style={{ color: 'red' }}>{error}</p>}\n//       <table border=\"1\" cellPadding=\"10\" style={{ borderCollapse: 'collapse' }}>\n//         <thead>\n//           <tr>\n//             <th>Name</th>\n//             <th>Price ($)</th>\n//             <th>Description</th>\n//             <th>Image</th>\n//             <th>Actions</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {products.map((product) =>\n//             editingProduct === product._id ? (\n//               <tr key={product._id}>\n//                 <td>\n//                   <input\n//                     name=\"name\"\n//                     value={formData.name}\n//                     onChange={handleEditChange}\n//                   />\n//                 </td>\n//                 <td>\n//                   <input\n//                     name=\"price\"\n//                     value={formData.price}\n//                     onChange={handleEditChange}\n//                   />\n//                 </td>\n//                 <td>\n//                   <input\n//                     name=\"description\"\n//                     value={formData.description}\n//                     onChange={handleEditChange}\n//                   />\n//                 </td>\n//                 <td>\n//                   <input\n//                     name=\"image\"\n//                     value={formData.image}\n//                     onChange={handleEditChange}\n//                   />\n//                 </td>\n//                 <td>\n//                   <button onClick={() => handleUpdate(product._id)}>Save</button>\n//                   <button onClick={() => setEditingProduct(null)}>Cancel</button>\n//                 </td>\n//               </tr>\n//             ) : (\n//               <tr key={product._id}>\n//                 <td>{product.name}</td>\n//                 <td>{product.price}</td>\n//                 <td>{product.description}</td>\n//                 <td>\n//                   {product.image ? (\n//                     <img src={product.image} alt={product.name} width=\"50\" />\n//                   ) : (\n//                     'No image'\n//                   )}\n//                 </td>\n//                 <td>\n//                   <button onClick={() => startEditing(product)}>Edit</button>\n//                   <button onClick={() => handleDelete(product._id)}>Delete</button>\n//                 </td>\n//               </tr>\n//             )\n//           )}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// };\n\n// export default ProductList;\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductListing = ({\n  products\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Product List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: products.map(product => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: product.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: product.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Price: \\u20B9\", product.price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this), product.image && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `http://localhost:5000/uploads/${product.image}`,\n          alt: product.name,\n          style: {\n            width: '150px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 15\n        }, this)]\n      }, product._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n};\n_c = ProductListing;\nexport default ProductListing;\nvar _c;\n$RefreshReg$(_c, \"ProductListing\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ProductListing","products","children","fileName","_jsxFileName","lineNumber","columnNumber","map","product","name","description","price","image","src","alt","style","width","_id","_c","$RefreshReg$"],"sources":["C:/Users/sharm/OneDrive/Desktop/Zaeesh/transport11/src/component/ProductList.jsx"],"sourcesContent":["\r\n\r\n\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import {\r\n//   getProducts,\r\n//   deleteProduct,\r\n//   updateProduct,\r\n// } from '../api/proudct';\r\n\r\n\r\n// const ProductList = () => {\r\n//   const [products, setProducts] = useState([]);\r\n//   console.log(products,'products');\r\n//   const [editingProduct, setEditingProduct] = useState(null);\r\n//   const [formData, setFormData] = useState({\r\n//     name: '',\r\n//     price: '',\r\n//     description: '',\r\n//     image: ''\r\n//   });\r\n//   console.log(formData,'test data');\r\n  \r\n//   const [error, setError] = useState(null);\r\n   \r\n//   useEffect(() => {\r\n//     fetchProducts();\r\n//   }, []);\r\n\r\n//   const fetchProducts = async () => {\r\n//     try {\r\n//       const data = await getProducts();\r\n//       setProducts(data);\r\n//     } catch (err) {\r\n//       console.error(err);\r\n//       setError('Failed to load products.');\r\n//     }\r\n//   };\r\n\r\n//   const handleDelete = async (id) => {\r\n//     if (!window.confirm('Delete this product?')) return;\r\n\r\n//     try {\r\n//       await deleteProduct(id);\r\n//       setProducts(products.filter((p) => p._id !== id));\r\n//     } catch (err) {\r\n//       console.error(err);\r\n//       setError('Failed to delete product.');\r\n//     }\r\n//   };\r\n\r\n//   const startEditing = (product) => {\r\n//     setEditingProduct(product._id);\r\n//     setFormData({\r\n//       name: product.name,\r\n//       price: product.price,\r\n//       description: product.description || '',\r\n//       image: product.image || ''\r\n//     });\r\n//   };\r\n\r\n//   const handleEditChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setFormData((prev) => ({ ...prev, [name]: value }));\r\n//   };\r\n\r\n//   const handleUpdate = async (id) => {\r\n//     try {\r\n//       await updateProduct(id, formData);\r\n//       setEditingProduct(null);\r\n//       fetchProducts();\r\n//     } catch (err) {\r\n//       console.error(err);\r\n//       setError('Failed to update product.');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2>Product List</h2>\r\n//       {error && <p style={{ color: 'red' }}>{error}</p>}\r\n//       <table border=\"1\" cellPadding=\"10\" style={{ borderCollapse: 'collapse' }}>\r\n//         <thead>\r\n//           <tr>\r\n//             <th>Name</th>\r\n//             <th>Price ($)</th>\r\n//             <th>Description</th>\r\n//             <th>Image</th>\r\n//             <th>Actions</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {products.map((product) =>\r\n//             editingProduct === product._id ? (\r\n//               <tr key={product._id}>\r\n//                 <td>\r\n//                   <input\r\n//                     name=\"name\"\r\n//                     value={formData.name}\r\n//                     onChange={handleEditChange}\r\n//                   />\r\n//                 </td>\r\n//                 <td>\r\n//                   <input\r\n//                     name=\"price\"\r\n//                     value={formData.price}\r\n//                     onChange={handleEditChange}\r\n//                   />\r\n//                 </td>\r\n//                 <td>\r\n//                   <input\r\n//                     name=\"description\"\r\n//                     value={formData.description}\r\n//                     onChange={handleEditChange}\r\n//                   />\r\n//                 </td>\r\n//                 <td>\r\n//                   <input\r\n//                     name=\"image\"\r\n//                     value={formData.image}\r\n//                     onChange={handleEditChange}\r\n//                   />\r\n//                 </td>\r\n//                 <td>\r\n//                   <button onClick={() => handleUpdate(product._id)}>Save</button>\r\n//                   <button onClick={() => setEditingProduct(null)}>Cancel</button>\r\n//                 </td>\r\n//               </tr>\r\n//             ) : (\r\n//               <tr key={product._id}>\r\n//                 <td>{product.name}</td>\r\n//                 <td>{product.price}</td>\r\n//                 <td>{product.description}</td>\r\n//                 <td>\r\n//                   {product.image ? (\r\n//                     <img src={product.image} alt={product.name} width=\"50\" />\r\n//                   ) : (\r\n//                     'No image'\r\n//                   )}\r\n//                 </td>\r\n//                 <td>\r\n//                   <button onClick={() => startEditing(product)}>Edit</button>\r\n//                   <button onClick={() => handleDelete(product._id)}>Delete</button>\r\n//                 </td>\r\n//               </tr>\r\n//             )\r\n//           )}\r\n//         </tbody>\r\n//       </table>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ProductList;\r\n\r\n\r\nimport React from 'react';\r\n\r\nconst ProductListing = ({ products }) => {\r\n  return (\r\n    <div>\r\n      <h3>Product List</h3>\r\n      <div>\r\n        {products.map(product => (\r\n          <div key={product._id}>\r\n            <h4>{product.name}</h4>\r\n            <p>{product.description}</p>\r\n            <p>Price: ₹{product.price}</p>\r\n            {product.image && (\r\n              <img\r\n                src={`http://localhost:5000/uploads/${product.image}`}\r\n                alt={product.name}\r\n                style={{ width: '150px' }}\r\n              />\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductListing;\r\n"],"mappings":";AAIA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EACvC,oBACEF,OAAA;IAAAG,QAAA,gBACEH,OAAA;MAAAG,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBP,OAAA;MAAAG,QAAA,EACGD,QAAQ,CAACM,GAAG,CAACC,OAAO,iBACnBT,OAAA;QAAAG,QAAA,gBACEH,OAAA;UAAAG,QAAA,EAAKM,OAAO,CAACC;QAAI;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACvBP,OAAA;UAAAG,QAAA,EAAIM,OAAO,CAACE;QAAW;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC5BP,OAAA;UAAAG,QAAA,GAAG,eAAQ,EAACM,OAAO,CAACG,KAAK;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EAC7BE,OAAO,CAACI,KAAK,iBACZb,OAAA;UACEc,GAAG,EAAE,iCAAiCL,OAAO,CAACI,KAAK,EAAG;UACtDE,GAAG,EAAEN,OAAO,CAACC,IAAK;UAClBM,KAAK,EAAE;YAAEC,KAAK,EAAE;UAAQ;QAAE;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3B,CACF;MAAA,GAVOE,OAAO,CAACS,GAAG;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAWhB,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACY,EAAA,GAtBIlB,cAAc;AAwBpB,eAAeA,cAAc;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}