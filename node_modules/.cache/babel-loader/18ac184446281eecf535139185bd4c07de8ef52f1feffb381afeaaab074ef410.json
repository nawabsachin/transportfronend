{"ast":null,"code":"// import axios from 'axios';\n\n// const API_BASE_URL = 'http://localhost:5000/api/products'; // Adjust this if your server runs on a different port or URL\n\n// // ✅ Get all products\n// export const getProducts = async () => {\n//   try {\n//     const res = await axios.get(API_BASE_URL);\n//     return res.data;\n//   } catch (error) {\n//     console.error('Get products failed:', error);\n//     throw error;\n//   }\n// };\n\n// // ✅ Add a new product\n// export const addProduct = async (formData) => {\n//   try {\n//     const res = await axios.post(API_BASE_URL, formData, {\n//       headers: {\n//         'Content-Type': 'multipart/form-data',\n//         Authorization: 'Bearer ' + localStorage.getItem('token') // Optional: if using auth\n//       }\n//     });\n//     return res.data;\n//   } catch (error) {\n//     console.error('Add product failed:', error);\n//     throw error;\n//   }\n// };\n\n// // ✅ Update a product\n// export const updateProduct = async (id, formData) => {\n//   try {\n//     const res = await axios.put(`${API_BASE_URL}/${id}`, formData, {\n//       headers: {\n//         'Content-Type': 'multipart/form-data',\n//         Authorization: 'Bearer ' + localStorage.getItem('token')\n//       }\n//     });\n//     return res.data;\n//   } catch (error) {\n//     console.error('Update product failed:', error);\n//     throw error;\n//   }\n// };\n\n// // ✅ Delete a product\n// export const deleteProduct = async (id) => {\n//   try {\n//     const res = await axios.delete(`${API_BASE_URL}/${id}`, {\n//       headers: {\n//         Authorization: 'Bearer ' + localStorage.getItem('token')\n//       }\n//     });\n//     return res.data;\n//   } catch (error) {\n//     console.error('Delete product failed:', error);\n//     throw error;\n//   }\n// };\n\n// src/services/productService.js or similar\n\nimport axios from 'axios';\nconst API_BASE_URL = 'http://localhost:5000/api/products'; // ✅ This must match your backend route!\n\nexport const addProduct = async formData => {\n  try {\n    const res = await axios.post(API_BASE_URL, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n        Authorization: 'Bearer ' + localStorage.getItem('token') // Optional\n      }\n    });\n    return res.data;\n  } catch (error) {\n    var _error$response;\n    console.error('Add product failed:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","addProduct","formData","res","post","headers","Authorization","localStorage","getItem","data","error","_error$response","console","response","message"],"sources":["C:/Users/sharm/OneDrive/Desktop/Zaeesh/transport11/src/component/productService.jsx"],"sourcesContent":["\r\n\r\n// import axios from 'axios';\r\n\r\n// const API_BASE_URL = 'http://localhost:5000/api/products'; // Adjust this if your server runs on a different port or URL\r\n\r\n// // ✅ Get all products\r\n// export const getProducts = async () => {\r\n//   try {\r\n//     const res = await axios.get(API_BASE_URL);\r\n//     return res.data;\r\n//   } catch (error) {\r\n//     console.error('Get products failed:', error);\r\n//     throw error;\r\n//   }\r\n// };\r\n\r\n// // ✅ Add a new product\r\n// export const addProduct = async (formData) => {\r\n//   try {\r\n//     const res = await axios.post(API_BASE_URL, formData, {\r\n//       headers: {\r\n//         'Content-Type': 'multipart/form-data',\r\n//         Authorization: 'Bearer ' + localStorage.getItem('token') // Optional: if using auth\r\n//       }\r\n//     });\r\n//     return res.data;\r\n//   } catch (error) {\r\n//     console.error('Add product failed:', error);\r\n//     throw error;\r\n//   }\r\n// };\r\n\r\n// // ✅ Update a product\r\n// export const updateProduct = async (id, formData) => {\r\n//   try {\r\n//     const res = await axios.put(`${API_BASE_URL}/${id}`, formData, {\r\n//       headers: {\r\n//         'Content-Type': 'multipart/form-data',\r\n//         Authorization: 'Bearer ' + localStorage.getItem('token')\r\n//       }\r\n//     });\r\n//     return res.data;\r\n//   } catch (error) {\r\n//     console.error('Update product failed:', error);\r\n//     throw error;\r\n//   }\r\n// };\r\n\r\n// // ✅ Delete a product\r\n// export const deleteProduct = async (id) => {\r\n//   try {\r\n//     const res = await axios.delete(`${API_BASE_URL}/${id}`, {\r\n//       headers: {\r\n//         Authorization: 'Bearer ' + localStorage.getItem('token')\r\n//       }\r\n//     });\r\n//     return res.data;\r\n//   } catch (error) {\r\n//     console.error('Delete product failed:', error);\r\n//     throw error;\r\n//   }\r\n// };\r\n\r\n// src/services/productService.js or similar\r\n\r\nimport axios from 'axios';\r\n\r\nconst API_BASE_URL = 'http://localhost:5000/api/products'; // ✅ This must match your backend route!\r\n\r\nexport const addProduct = async (formData) => {\r\n  try {\r\n    const res = await axios.post(API_BASE_URL, formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n        Authorization: 'Bearer ' + localStorage.getItem('token') // Optional\r\n      }\r\n    });\r\n    return res.data;\r\n  } catch (error) {\r\n    console.error('Add product failed:', error.response?.data || error.message);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,oCAAoC,CAAC,CAAC;;AAE3D,OAAO,MAAMC,UAAU,GAAG,MAAOC,QAAQ,IAAK;EAC5C,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAACJ,YAAY,EAAEE,QAAQ,EAAE;MACnDG,OAAO,EAAE;QACP,cAAc,EAAE,qBAAqB;QACrCC,aAAa,EAAE,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;MAC3D;IACF,CAAC,CAAC;IACF,OAAOL,GAAG,CAACM,IAAI;EACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAC,eAAA;IACdC,OAAO,CAACF,KAAK,CAAC,qBAAqB,EAAE,EAAAC,eAAA,GAAAD,KAAK,CAACG,QAAQ,cAAAF,eAAA,uBAAdA,eAAA,CAAgBF,IAAI,KAAIC,KAAK,CAACI,OAAO,CAAC;IAC3E,MAAMJ,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}