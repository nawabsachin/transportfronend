{"ast":null,"code":"// api/product.js\n\n// Function to fetch products from the server\nexport const getProducts = async () => {\n  try {\n    const response = await fetch('http://localhost:5000/api/products'); // Endpoint to get products\n    if (!response.ok) {\n      throw new Error('Failed to fetch products');\n    }\n    const data = await response.json();\n    return data;\n  } catch (err) {\n    console.error('Error fetching products:', err);\n    throw new Error('Failed to load products: ' + err.message);\n  }\n};\n\n// Function to delete a product by its ID\nexport const deleteProduct = async id => {\n  try {\n    const response = await fetch(`http://localhost:5000/api/products/${id}`, {\n      method: 'DELETE'\n    });\n    if (!response.ok) {\n      throw new Error('Failed to delete product');\n    }\n  } catch (err) {\n    console.error('Error deleting product:', err);\n    throw new Error('Failed to delete product');\n  }\n};\n\n// Function to update an existing product\nexport const updateProduct = async (id, productData) => {\n  try {\n    const response = await fetch(`http://localhost:5000/api/products/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(productData)\n    });\n    if (!response.ok) {\n      throw new Error('Failed to update product');\n    }\n  } catch (err) {\n    console.error('Error updating product:', err);\n    throw new Error('Failed to update product');\n  }\n};\n\n// Function to create a new product\nexport const createProduct = async productData => {\n  try {\n    const response = await fetch('http://localhost:5000/api/products', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(productData)\n    });\n    if (!response.ok) {\n      throw new Error('Failed to create product');\n    }\n    return await response.json();\n  } catch (err) {\n    console.error('Error creating product:', err);\n    throw new Error('Failed to create product');\n  }\n};","map":{"version":3,"names":["getProducts","response","fetch","ok","Error","data","json","err","console","error","message","deleteProduct","id","method","updateProduct","productData","headers","body","JSON","stringify","createProduct"],"sources":["C:/Users/sharm/OneDrive/Desktop/Zaeesh/transport11/src/api/proudct.js"],"sourcesContent":["// api/product.js\r\n\r\n// Function to fetch products from the server\r\nexport const getProducts = async () => {\r\n  try {\r\n    const response = await fetch('http://localhost:5000/api/products'); // Endpoint to get products\r\n    if (!response.ok) {\r\n      throw new Error('Failed to fetch products');\r\n    }\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (err) {\r\n    console.error('Error fetching products:', err);\r\n    throw new Error('Failed to load products: ' + err.message);\r\n  }\r\n};\r\n\r\n// Function to delete a product by its ID\r\nexport const deleteProduct = async (id) => {\r\n  try {\r\n    const response = await fetch(`http://localhost:5000/api/products/${id}`, {\r\n      method: 'DELETE',\r\n    });\r\n    if (!response.ok) {\r\n      throw new Error('Failed to delete product');\r\n    }\r\n  } catch (err) {\r\n    console.error('Error deleting product:', err);\r\n    throw new Error('Failed to delete product');\r\n  }\r\n};\r\n\r\n// Function to update an existing product\r\nexport const updateProduct = async (id, productData) => {\r\n  try {\r\n    const response = await fetch(`http://localhost:5000/api/products/${id}`, {\r\n      method: 'PUT',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(productData),\r\n    });\r\n    if (!response.ok) {\r\n      throw new Error('Failed to update product');\r\n    }\r\n  } catch (err) {\r\n    console.error('Error updating product:', err);\r\n    throw new Error('Failed to update product');\r\n  }\r\n};\r\n\r\n// Function to create a new product\r\nexport const createProduct = async (productData) => {\r\n  try {\r\n    const response = await fetch('http://localhost:5000/api/products', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(productData),\r\n    });\r\n    if (!response.ok) {\r\n      throw new Error('Failed to create product');\r\n    }\r\n    return await response.json();\r\n  } catch (err) {\r\n    console.error('Error creating product:', err);\r\n    throw new Error('Failed to create product');\r\n  }\r\n};\r\n"],"mappings":"AAAA;;AAEA;AACA,OAAO,MAAMA,WAAW,GAAG,MAAAA,CAAA,KAAY;EACrC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,CAAC,CAAC,CAAC;IACpE,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;IAC7C;IACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI;EACb,CAAC,CAAC,OAAOE,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEF,GAAG,CAAC;IAC9C,MAAM,IAAIH,KAAK,CAAC,2BAA2B,GAAGG,GAAG,CAACG,OAAO,CAAC;EAC5D;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,aAAa,GAAG,MAAOC,EAAE,IAAK;EACzC,IAAI;IACF,MAAMX,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsCU,EAAE,EAAE,EAAE;MACvEC,MAAM,EAAE;IACV,CAAC,CAAC;IACF,IAAI,CAACZ,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;IAC7C;EACF,CAAC,CAAC,OAAOG,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEF,GAAG,CAAC;IAC7C,MAAM,IAAIH,KAAK,CAAC,0BAA0B,CAAC;EAC7C;AACF,CAAC;;AAED;AACA,OAAO,MAAMU,aAAa,GAAG,MAAAA,CAAOF,EAAE,EAAEG,WAAW,KAAK;EACtD,IAAI;IACF,MAAMd,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsCU,EAAE,EAAE,EAAE;MACvEC,MAAM,EAAE,KAAK;MACbG,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACJ,WAAW;IAClC,CAAC,CAAC;IACF,IAAI,CAACd,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;IAC7C;EACF,CAAC,CAAC,OAAOG,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEF,GAAG,CAAC;IAC7C,MAAM,IAAIH,KAAK,CAAC,0BAA0B,CAAC;EAC7C;AACF,CAAC;;AAED;AACA,OAAO,MAAMgB,aAAa,GAAG,MAAOL,WAAW,IAAK;EAClD,IAAI;IACF,MAAMd,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,EAAE;MACjEW,MAAM,EAAE,MAAM;MACdG,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACJ,WAAW;IAClC,CAAC,CAAC;IACF,IAAI,CAACd,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;IAC7C;IACA,OAAO,MAAMH,QAAQ,CAACK,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEF,GAAG,CAAC;IAC7C,MAAM,IAAIH,KAAK,CAAC,0BAA0B,CAAC;EAC7C;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}